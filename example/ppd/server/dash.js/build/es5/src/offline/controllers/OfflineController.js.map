{"version":3,"sources":["../../../../../src/offline/controllers/OfflineController.js"],"names":["OfflineController","context","instance","downloads","adapter","schemeLoaderFactory","debug","logger","manifestLoader","manifestModel","manifestUpdater","baseURLController","offlineStoreController","urlUtils","offlineUrlUtils","events","eventBus","constants","dashConstants","errHandler","setup","getInstance","setConfig","config","create","getLogger","registerUrlRegex","getRegex","registerLoader","OfflineConstants","OFFLINE_SCHEME","IndexDBOfflineLoader","getDownloadFromId","id","download","find","item","getId","createDownloadFromId","push","createDownloadFromStorage","offline","manifestId","status","OFFLINE_STATUS_STARTED","OFFLINE_STATUS_STOPPED","setInitialState","url","progress","originalUrl","originalURL","removeDownloadFromId","Promise","resolve","reject","waitForStatusChanged","isDownloading","downloadStopped","off","DOWNLOADING_STOPPED","deleteDownloadById","then","catch","err","on","deleteDownload","index","indexOf","splice","generateManifestId","timestamp","Date","getTime","loadDownloadsFromStorage","getAllManifests","items","manifests","forEach","e","error","createDownload","downloadFromUrl","initDownload","startDownload","selectedRepresentations","getAllDownloads","ret","offlineDownload","OfflineDownloadVo","getDownloadProgression","getOfflineUrl","getManifestUrl","getStatus","stopDownload","resumeDownload","resetDownloads","resetDownload","reset","unregisterLoader","__dashjs_factory_name","factory","dashjs","FactoryMaker","getClassFactory","OfflineEvents","errors","OfflineErrors","updateClassFactory"],"mappings":"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","file":"OfflineController.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport OfflineConstants from '../constants/OfflineConstants';\nimport OfflineStoreController from './OfflineStoreController';\nimport OfflineDownload from '../OfflineDownload';\nimport IndexDBOfflineLoader from '../net/IndexDBOfflineLoader';\nimport OfflineUrlUtils from '../utils/OfflineUrlUtils';\nimport OfflineEvents from '../events/OfflineEvents';\nimport OfflineErrors from '../errors/OfflineErrors';\nimport OfflineDownloadVo from '../vo/OfflineDownloadVo';\n\n/**\n * @class OfflineController\n */\nfunction OfflineController() {\n\n    const context = this.context;\n\n    let instance,\n        downloads,\n        adapter,\n        schemeLoaderFactory,\n        debug,\n        logger,\n        manifestLoader,\n        manifestModel,\n        manifestUpdater,\n        baseURLController,\n        offlineStoreController,\n        urlUtils,\n        offlineUrlUtils,\n        events,\n        eventBus,\n        constants,\n        dashConstants,\n        errHandler;\n\n    function setup() {\n        offlineUrlUtils = OfflineUrlUtils(context).getInstance();\n\n        downloads = [];\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n\n        if (config.events && config.eventBus) {\n            events = config.events;\n            eventBus = config.eventBus;\n            offlineStoreController = OfflineStoreController(context).create({ eventBus: config.eventBus, errHandler: errHandler});\n        }\n\n        if (config.debug) {\n            debug = config.debug;\n            logger = debug.getLogger(instance);\n        }\n\n        if (config.manifestLoader) {\n            manifestLoader = config.manifestLoader;\n        }\n\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n\n        if (config.manifestUpdater) {\n            manifestUpdater = config.manifestUpdater;\n        }\n\n        if (config.baseURLController) {\n            baseURLController = config.baseURLController;\n        }\n\n        if (config.schemeLoaderFactory) {\n            schemeLoaderFactory = config.schemeLoaderFactory;\n        }\n\n        if (config.constants) {\n            constants = config.constants;\n        }\n\n        if (config.dashConstants) {\n            dashConstants = config.dashConstants;\n        }\n\n        if (config.urlUtils) {\n            urlUtils = config.urlUtils;\n            urlUtils.registerUrlRegex(offlineUrlUtils.getRegex(), offlineUrlUtils);\n        }\n\n        schemeLoaderFactory.registerLoader(OfflineConstants.OFFLINE_SCHEME, IndexDBOfflineLoader);\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        DOWNLOAD LIST FUNCTIONS\n\n    ---------------------------------------------------------------------------\n    */\n    function getDownloadFromId(id) {\n        let download = downloads.find((item) => {\n            return item.getId() === id;\n        });\n        return download;\n    }\n\n    function createDownloadFromId(id) {\n        let download;\n        download = getDownloadFromId(id);\n\n        if (!download) {\n            // create download controller\n            download = OfflineDownload(context).create({\n                id: id,\n                eventBus: eventBus,\n                events: events,\n                manifestLoader: manifestLoader,\n                manifestModel: manifestModel,\n                manifestUpdater: manifestUpdater,\n                baseURLController: baseURLController,\n                adapter: adapter,\n                errHandler: errHandler,\n                offlineStoreController: offlineStoreController,\n                debug: debug,\n                constants: constants,\n                dashConstants: dashConstants,\n                urlUtils: urlUtils\n            });\n\n            downloads.push(download);\n        }\n\n        return download;\n    }\n\n    function createDownloadFromStorage(offline) {\n        let download = getDownloadFromId(offline.manifestId);\n\n        if (!download) {\n            download = createDownloadFromId(offline.manifestId);\n            let status = offline.status;\n            if (status === OfflineConstants.OFFLINE_STATUS_STARTED) {\n                status = OfflineConstants.OFFLINE_STATUS_STOPPED;\n            }\n\n            download.setInitialState({\n                url: offline.url,\n                progress: offline.progress,\n                originalUrl: offline.originalURL,\n                status: status\n            });\n        }\n\n        return download;\n    }\n\n    function removeDownloadFromId(id) {\n        return new Promise(function (resolve, reject) {\n            let download = getDownloadFromId(id);\n            let waitForStatusChanged = false;\n            if (download) {\n                //is download running?\n                if (download.isDownloading()) {\n                    //register status changed event\n                    waitForStatusChanged = true;\n                    const downloadStopped = function () {\n                        eventBus.off(events.DOWNLOADING_STOPPED, downloadStopped, instance);\n                        return offlineStoreController.deleteDownloadById(id).then(function () {\n                            resolve();\n                        }).catch(function (err) {\n                            reject(err);\n                        });\n                    };\n                    eventBus.on(events.DOWNLOADING_STOPPED, downloadStopped, instance);\n                }\n                download.deleteDownload();\n                let index = downloads.indexOf(download);\n                downloads.splice(index, 1);\n            }\n\n            if (!waitForStatusChanged) {\n                resolve();\n            }\n        });\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        DOWNLOAD FUNCTIONS\n\n    ---------------------------------------------------------------------------\n    */\n    function generateManifestId() {\n        let timestamp = new Date().getTime();\n        return timestamp;\n    }\n\n    function loadDownloadsFromStorage() {\n\n        return new Promise(function (resolve, reject) {\n            offlineStoreController.getAllManifests().then((items) => {\n                items.manifests.forEach((offline) => {\n                    createDownloadFromStorage(offline);\n                });\n\n                resolve();\n            }).catch((e) => {\n                logger.error('Failed to load downloads ' + e);\n                reject(e);\n            });\n        });\n    }\n\n    function createDownload(url) {\n        return new Promise(function (resolve, reject) {\n            let id = generateManifestId();\n\n            // create download controller\n            let download = createDownloadFromId(id);\n\n            download.downloadFromUrl(url).then(() => {\n                resolve(id);\n            })\n            .catch((e) => {\n                logger.error('Failed to download ' + e);\n                removeDownloadFromId(id).then(function () {\n                    reject(e);\n                });\n            });\n        });\n    }\n\n    function initDownload(id) {\n        let download = getDownloadFromId(id);\n        if (download) {\n            download.initDownload();\n        }\n    }\n\n    function startDownload(id, selectedRepresentations) {\n        let download = getDownloadFromId(id);\n        if (download) {\n            download.startDownload(selectedRepresentations);\n        }\n    }\n\n    function getAllDownloads() {\n\n        let ret = [];\n        downloads.forEach((download) => {\n            const offlineDownload = new OfflineDownloadVo();\n            offlineDownload.id = download.getId();\n            offlineDownload.progress = download.getDownloadProgression();\n            offlineDownload.url = download.getOfflineUrl();\n            offlineDownload.originalUrl = download.getManifestUrl();\n            offlineDownload.status = download.getStatus();\n            ret.push(offlineDownload);\n        });\n\n        return ret;\n    }\n\n    function stopDownload(id) {\n        let download = getDownloadFromId(id);\n        if (download) {\n            download.stopDownload();\n        }\n    }\n\n    function deleteDownload(id) {\n        return removeDownloadFromId(id).then(function () {\n            return offlineStoreController.deleteDownloadById(id);\n        });\n    }\n\n    function resumeDownload(id) {\n        let download = getDownloadFromId(id);\n        if (download) {\n            download.resumeDownload();\n        }\n    }\n\n    function getDownloadProgression(id) {\n        let download = getDownloadFromId(id);\n        if (download) {\n            return download.getDownloadProgression();\n        }\n        return 0;\n    }\n\n    function resetDownloads() {\n        downloads.forEach((download) => {\n            download.resetDownload();\n        });\n    }\n\n    /**\n     * Reset\n     * @instance\n     */\n    function reset() {\n        resetDownloads();\n        schemeLoaderFactory.unregisterLoader(OfflineConstants.OFFLINE_SCHEME);\n    }\n\n    instance = {\n        setConfig: setConfig,\n        loadDownloadsFromStorage: loadDownloadsFromStorage,\n        createDownload: createDownload,\n        initDownload: initDownload,\n        startDownload: startDownload,\n        stopDownload: stopDownload,\n        resumeDownload: resumeDownload,\n        deleteDownload: deleteDownload,\n        getDownloadProgression: getDownloadProgression,\n        getAllDownloads: getAllDownloads,\n        resetDownloads: resetDownloads,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nOfflineController.__dashjs_factory_name = 'OfflineController';\nconst factory = dashjs.FactoryMaker.getClassFactory(OfflineController); /* jshint ignore:line */\nfactory.events = OfflineEvents;\nfactory.errors = OfflineErrors;\ndashjs.FactoryMaker.updateClassFactory(OfflineController.__dashjs_factory_name, factory); /* jshint ignore:line */\nexport default factory;\n"]}