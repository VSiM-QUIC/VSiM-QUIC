{"version":3,"file":"dash.offline.min.js","sourceRoot":"./src/","sources":["../node_modules/browserify/node_modules/browser-pack/_prelude.js","../node_modules/html-entities/index.js","../node_modules/html-entities/lib/html4-entities.js","../node_modules/html-entities/lib/html5-entities.js","../node_modules/html-entities/lib/xml-entities.js","../node_modules/localforage/dist/localforage.js","core/events/EventsBase.js","offline/OfflineDownload.js","offline/OfflineStream.js","offline/OfflineStreamProcessor.js","offline/constants/OfflineConstants.js","offline/controllers/OfflineController.js","offline/controllers/OfflineStoreController.js","offline/errors/OfflineErrors.js","offline/events/OfflineEvents.js","offline/index.js","offline/net/IndexDBOfflineLoader.js","offline/storage/IndexDBStore.js","offline/utils/OfflineIndexDBManifestParser.js","offline/utils/OfflineUrlUtils.js","offline/vo/OfflineDownloadVo.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","module.exports = {\n  XmlEntities: require(4),\n  Html4Entities: require(2),\n  Html5Entities: require(3),\n  AllHtmlEntities: require(3)\n};\n","var HTML_ALPHA = ['apos', 'nbsp', 'iexcl', 'cent', 'pound', 'curren', 'yen', 'brvbar', 'sect', 'uml', 'copy', 'ordf', 'laquo', 'not', 'shy', 'reg', 'macr', 'deg', 'plusmn', 'sup2', 'sup3', 'acute', 'micro', 'para', 'middot', 'cedil', 'sup1', 'ordm', 'raquo', 'frac14', 'frac12', 'frac34', 'iquest', 'Agrave', 'Aacute', 'Acirc', 'Atilde', 'Auml', 'Aring', 'Aelig', 'Ccedil', 'Egrave', 'Eacute', 'Ecirc', 'Euml', 'Igrave', 'Iacute', 'Icirc', 'Iuml', 'ETH', 'Ntilde', 'Ograve', 'Oacute', 'Ocirc', 'Otilde', 'Ouml', 'times', 'Oslash', 'Ugrave', 'Uacute', 'Ucirc', 'Uuml', 'Yacute', 'THORN', 'szlig', 'agrave', 'aacute', 'acirc', 'atilde', 'auml', 'aring', 'aelig', 'ccedil', 'egrave', 'eacute', 'ecirc', 'euml', 'igrave', 'iacute', 'icirc', 'iuml', 'eth', 'ntilde', 'ograve', 'oacute', 'ocirc', 'otilde', 'ouml', 'divide', 'oslash', 'ugrave', 'uacute', 'ucirc', 'uuml', 'yacute', 'thorn', 'yuml', 'quot', 'amp', 'lt', 'gt', 'OElig', 'oelig', 'Scaron', 'scaron', 'Yuml', 'circ', 'tilde', 'ensp', 'emsp', 'thinsp', 'zwnj', 'zwj', 'lrm', 'rlm', 'ndash', 'mdash', 'lsquo', 'rsquo', 'sbquo', 'ldquo', 'rdquo', 'bdquo', 'dagger', 'Dagger', 'permil', 'lsaquo', 'rsaquo', 'euro', 'fnof', 'Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon', 'Zeta', 'Eta', 'Theta', 'Iota', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Xi', 'Omicron', 'Pi', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'Phi', 'Chi', 'Psi', 'Omega', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigmaf', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'thetasym', 'upsih', 'piv', 'bull', 'hellip', 'prime', 'Prime', 'oline', 'frasl', 'weierp', 'image', 'real', 'trade', 'alefsym', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'crarr', 'lArr', 'uArr', 'rArr', 'dArr', 'hArr', 'forall', 'part', 'exist', 'empty', 'nabla', 'isin', 'notin', 'ni', 'prod', 'sum', 'minus', 'lowast', 'radic', 'prop', 'infin', 'ang', 'and', 'or', 'cap', 'cup', 'int', 'there4', 'sim', 'cong', 'asymp', 'ne', 'equiv', 'le', 'ge', 'sub', 'sup', 'nsub', 'sube', 'supe', 'oplus', 'otimes', 'perp', 'sdot', 'lceil', 'rceil', 'lfloor', 'rfloor', 'lang', 'rang', 'loz', 'spades', 'clubs', 'hearts', 'diams'];\nvar HTML_CODES = [39, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 34, 38, 60, 62, 338, 339, 352, 353, 376, 710, 732, 8194, 8195, 8201, 8204, 8205, 8206, 8207, 8211, 8212, 8216, 8217, 8218, 8220, 8221, 8222, 8224, 8225, 8240, 8249, 8250, 8364, 402, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 977, 978, 982, 8226, 8230, 8242, 8243, 8254, 8260, 8472, 8465, 8476, 8482, 8501, 8592, 8593, 8594, 8595, 8596, 8629, 8656, 8657, 8658, 8659, 8660, 8704, 8706, 8707, 8709, 8711, 8712, 8713, 8715, 8719, 8721, 8722, 8727, 8730, 8733, 8734, 8736, 8743, 8744, 8745, 8746, 8747, 8756, 8764, 8773, 8776, 8800, 8801, 8804, 8805, 8834, 8835, 8836, 8838, 8839, 8853, 8855, 8869, 8901, 8968, 8969, 8970, 8971, 9001, 9002, 9674, 9824, 9827, 9829, 9830];\n\nvar alphaIndex = {};\nvar numIndex = {};\n\nvar i = 0;\nvar length = HTML_ALPHA.length;\nwhile (i < length) {\n    var a = HTML_ALPHA[i];\n    var c = HTML_CODES[i];\n    alphaIndex[a] = String.fromCharCode(c);\n    numIndex[c] = a;\n    i++;\n}\n\n/**\n * @constructor\n */\nfunction Html4Entities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var chr;\n        if (entity.charAt(0) === \"#\") {\n            var code = entity.charAt(1).toLowerCase() === 'x' ?\n                parseInt(entity.substr(2), 16) :\n                parseInt(entity.substr(1));\n\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n                chr = String.fromCharCode(code);\n            }\n        } else {\n            chr = alphaIndex[entity];\n        }\n        return chr || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.decode = function(str) {\n    return new Html4Entities().decode(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var alpha = numIndex[str.charCodeAt(i)];\n        result += alpha ? \"&\" + alpha + \";\" : str.charAt(i);\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encode = function(str) {\n    return new Html4Entities().encode(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var cc = str.charCodeAt(i);\n        var alpha = numIndex[cc];\n        if (alpha) {\n            result += \"&\" + alpha + \";\";\n        } else if (cc < 32 || cc > 126) {\n            result += \"&#\" + cc + \";\";\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encodeNonUTF = function(str) {\n    return new Html4Entities().encodeNonUTF(str);\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml4Entities.encodeNonASCII = function(str) {\n    return new Html4Entities().encodeNonASCII(str);\n};\n\nmodule.exports = Html4Entities;\n","var ENTITIES = [['Aacute', [193]], ['aacute', [225]], ['Abreve', [258]], ['abreve', [259]], ['ac', [8766]], ['acd', [8767]], ['acE', [8766, 819]], ['Acirc', [194]], ['acirc', [226]], ['acute', [180]], ['Acy', [1040]], ['acy', [1072]], ['AElig', [198]], ['aelig', [230]], ['af', [8289]], ['Afr', [120068]], ['afr', [120094]], ['Agrave', [192]], ['agrave', [224]], ['alefsym', [8501]], ['aleph', [8501]], ['Alpha', [913]], ['alpha', [945]], ['Amacr', [256]], ['amacr', [257]], ['amalg', [10815]], ['amp', [38]], ['AMP', [38]], ['andand', [10837]], ['And', [10835]], ['and', [8743]], ['andd', [10844]], ['andslope', [10840]], ['andv', [10842]], ['ang', [8736]], ['ange', [10660]], ['angle', [8736]], ['angmsdaa', [10664]], ['angmsdab', [10665]], ['angmsdac', [10666]], ['angmsdad', [10667]], ['angmsdae', [10668]], ['angmsdaf', [10669]], ['angmsdag', [10670]], ['angmsdah', [10671]], ['angmsd', [8737]], ['angrt', [8735]], ['angrtvb', [8894]], ['angrtvbd', [10653]], ['angsph', [8738]], ['angst', [197]], ['angzarr', [9084]], ['Aogon', [260]], ['aogon', [261]], ['Aopf', [120120]], ['aopf', [120146]], ['apacir', [10863]], ['ap', [8776]], ['apE', [10864]], ['ape', [8778]], ['apid', [8779]], ['apos', [39]], ['ApplyFunction', [8289]], ['approx', [8776]], ['approxeq', [8778]], ['Aring', [197]], ['aring', [229]], ['Ascr', [119964]], ['ascr', [119990]], ['Assign', [8788]], ['ast', [42]], ['asymp', [8776]], ['asympeq', [8781]], ['Atilde', [195]], ['atilde', [227]], ['Auml', [196]], ['auml', [228]], ['awconint', [8755]], ['awint', [10769]], ['backcong', [8780]], ['backepsilon', [1014]], ['backprime', [8245]], ['backsim', [8765]], ['backsimeq', [8909]], ['Backslash', [8726]], ['Barv', [10983]], ['barvee', [8893]], ['barwed', [8965]], ['Barwed', [8966]], ['barwedge', [8965]], ['bbrk', [9141]], ['bbrktbrk', [9142]], ['bcong', [8780]], ['Bcy', [1041]], ['bcy', [1073]], ['bdquo', [8222]], ['becaus', [8757]], ['because', [8757]], ['Because', [8757]], ['bemptyv', [10672]], ['bepsi', [1014]], ['bernou', [8492]], ['Bernoullis', [8492]], ['Beta', [914]], ['beta', [946]], ['beth', [8502]], ['between', [8812]], ['Bfr', [120069]], ['bfr', [120095]], ['bigcap', [8898]], ['bigcirc', [9711]], ['bigcup', [8899]], ['bigodot', [10752]], ['bigoplus', [10753]], ['bigotimes', [10754]], ['bigsqcup', [10758]], ['bigstar', [9733]], ['bigtriangledown', [9661]], ['bigtriangleup', [9651]], ['biguplus', [10756]], ['bigvee', [8897]], ['bigwedge', [8896]], ['bkarow', [10509]], ['blacklozenge', [10731]], ['blacksquare', [9642]], ['blacktriangle', [9652]], ['blacktriangledown', [9662]], ['blacktriangleleft', [9666]], ['blacktriangleright', [9656]], ['blank', [9251]], ['blk12', [9618]], ['blk14', [9617]], ['blk34', [9619]], ['block', [9608]], ['bne', [61, 8421]], ['bnequiv', [8801, 8421]], ['bNot', [10989]], ['bnot', [8976]], ['Bopf', [120121]], ['bopf', [120147]], ['bot', [8869]], ['bottom', [8869]], ['bowtie', [8904]], ['boxbox', [10697]], ['boxdl', [9488]], ['boxdL', [9557]], ['boxDl', [9558]], ['boxDL', [9559]], ['boxdr', [9484]], ['boxdR', [9554]], ['boxDr', [9555]], ['boxDR', [9556]], ['boxh', [9472]], ['boxH', [9552]], ['boxhd', [9516]], ['boxHd', [9572]], ['boxhD', [9573]], ['boxHD', [9574]], ['boxhu', [9524]], ['boxHu', [9575]], ['boxhU', [9576]], ['boxHU', [9577]], ['boxminus', [8863]], ['boxplus', [8862]], ['boxtimes', [8864]], ['boxul', [9496]], ['boxuL', [9563]], ['boxUl', [9564]], ['boxUL', [9565]], ['boxur', [9492]], ['boxuR', [9560]], ['boxUr', [9561]], ['boxUR', [9562]], ['boxv', [9474]], ['boxV', [9553]], ['boxvh', [9532]], ['boxvH', [9578]], ['boxVh', [9579]], ['boxVH', [9580]], ['boxvl', [9508]], ['boxvL', [9569]], ['boxVl', [9570]], ['boxVL', [9571]], ['boxvr', [9500]], ['boxvR', [9566]], ['boxVr', [9567]], ['boxVR', [9568]], ['bprime', [8245]], ['breve', [728]], ['Breve', [728]], ['brvbar', [166]], ['bscr', [119991]], ['Bscr', [8492]], ['bsemi', [8271]], ['bsim', [8765]], ['bsime', [8909]], ['bsolb', [10693]], ['bsol', [92]], ['bsolhsub', [10184]], ['bull', [8226]], ['bullet', [8226]], ['bump', [8782]], ['bumpE', [10926]], ['bumpe', [8783]], ['Bumpeq', [8782]], ['bumpeq', [8783]], ['Cacute', [262]], ['cacute', [263]], ['capand', [10820]], ['capbrcup', [10825]], ['capcap', [10827]], ['cap', [8745]], ['Cap', [8914]], ['capcup', [10823]], ['capdot', [10816]], ['CapitalDifferentialD', [8517]], ['caps', [8745, 65024]], ['caret', [8257]], ['caron', [711]], ['Cayleys', [8493]], ['ccaps', [10829]], ['Ccaron', [268]], ['ccaron', [269]], ['Ccedil', [199]], ['ccedil', [231]], ['Ccirc', [264]], ['ccirc', [265]], ['Cconint', [8752]], ['ccups', [10828]], ['ccupssm', [10832]], ['Cdot', [266]], ['cdot', [267]], ['cedil', [184]], ['Cedilla', [184]], ['cemptyv', [10674]], ['cent', [162]], ['centerdot', [183]], ['CenterDot', [183]], ['cfr', [120096]], ['Cfr', [8493]], ['CHcy', [1063]], ['chcy', [1095]], ['check', [10003]], ['checkmark', [10003]], ['Chi', [935]], ['chi', [967]], ['circ', [710]], ['circeq', [8791]], ['circlearrowleft', [8634]], ['circlearrowright', [8635]], ['circledast', [8859]], ['circledcirc', [8858]], ['circleddash', [8861]], ['CircleDot', [8857]], ['circledR', [174]], ['circledS', [9416]], ['CircleMinus', [8854]], ['CirclePlus', [8853]], ['CircleTimes', [8855]], ['cir', [9675]], ['cirE', [10691]], ['cire', [8791]], ['cirfnint', [10768]], ['cirmid', [10991]], ['cirscir', [10690]], ['ClockwiseContourIntegral', [8754]], ['clubs', [9827]], ['clubsuit', [9827]], ['colon', [58]], ['Colon', [8759]], ['Colone', [10868]], ['colone', [8788]], ['coloneq', [8788]], ['comma', [44]], ['commat', [64]], ['comp', [8705]], ['compfn', [8728]], ['complement', [8705]], ['complexes', [8450]], ['cong', [8773]], ['congdot', [10861]], ['Congruent', [8801]], ['conint', [8750]], ['Conint', [8751]], ['ContourIntegral', [8750]], ['copf', [120148]], ['Copf', [8450]], ['coprod', [8720]], ['Coproduct', [8720]], ['copy', [169]], ['COPY', [169]], ['copysr', [8471]], ['CounterClockwiseContourIntegral', [8755]], ['crarr', [8629]], ['cross', [10007]], ['Cross', [10799]], ['Cscr', [119966]], ['cscr', [119992]], ['csub', [10959]], ['csube', [10961]], ['csup', [10960]], ['csupe', [10962]], ['ctdot', [8943]], ['cudarrl', [10552]], ['cudarrr', [10549]], ['cuepr', [8926]], ['cuesc', [8927]], ['cularr', [8630]], ['cularrp', [10557]], ['cupbrcap', [10824]], ['cupcap', [10822]], ['CupCap', [8781]], ['cup', [8746]], ['Cup', [8915]], ['cupcup', [10826]], ['cupdot', [8845]], ['cupor', [10821]], ['cups', [8746, 65024]], ['curarr', [8631]], ['curarrm', [10556]], ['curlyeqprec', [8926]], ['curlyeqsucc', [8927]], ['curlyvee', [8910]], ['curlywedge', [8911]], ['curren', [164]], ['curvearrowleft', [8630]], ['curvearrowright', [8631]], ['cuvee', [8910]], ['cuwed', [8911]], ['cwconint', [8754]], ['cwint', [8753]], ['cylcty', [9005]], ['dagger', [8224]], ['Dagger', [8225]], ['daleth', [8504]], ['darr', [8595]], ['Darr', [8609]], ['dArr', [8659]], ['dash', [8208]], ['Dashv', [10980]], ['dashv', [8867]], ['dbkarow', [10511]], ['dblac', [733]], ['Dcaron', [270]], ['dcaron', [271]], ['Dcy', [1044]], ['dcy', [1076]], ['ddagger', [8225]], ['ddarr', [8650]], ['DD', [8517]], ['dd', [8518]], ['DDotrahd', [10513]], ['ddotseq', [10871]], ['deg', [176]], ['Del', [8711]], ['Delta', [916]], ['delta', [948]], ['demptyv', [10673]], ['dfisht', [10623]], ['Dfr', [120071]], ['dfr', [120097]], ['dHar', [10597]], ['dharl', [8643]], ['dharr', [8642]], ['DiacriticalAcute', [180]], ['DiacriticalDot', [729]], ['DiacriticalDoubleAcute', [733]], ['DiacriticalGrave', [96]], ['DiacriticalTilde', [732]], ['diam', [8900]], ['diamond', [8900]], ['Diamond', [8900]], ['diamondsuit', [9830]], ['diams', [9830]], ['die', [168]], ['DifferentialD', [8518]], ['digamma', [989]], ['disin', [8946]], ['div', [247]], ['divide', [247]], ['divideontimes', [8903]], ['divonx', [8903]], ['DJcy', [1026]], ['djcy', [1106]], ['dlcorn', [8990]], ['dlcrop', [8973]], ['dollar', [36]], ['Dopf', [120123]], ['dopf', [120149]], ['Dot', [168]], ['dot', [729]], ['DotDot', [8412]], ['doteq', [8784]], ['doteqdot', [8785]], ['DotEqual', [8784]], ['dotminus', [8760]], ['dotplus', [8724]], ['dotsquare', [8865]], ['doublebarwedge', [8966]], ['DoubleContourIntegral', [8751]], ['DoubleDot', [168]], ['DoubleDownArrow', [8659]], ['DoubleLeftArrow', [8656]], ['DoubleLeftRightArrow', [8660]], ['DoubleLeftTee', [10980]], ['DoubleLongLeftArrow', [10232]], ['DoubleLongLeftRightArrow', [10234]], ['DoubleLongRightArrow', [10233]], ['DoubleRightArrow', [8658]], ['DoubleRightTee', [8872]], ['DoubleUpArrow', [8657]], ['DoubleUpDownArrow', [8661]], ['DoubleVerticalBar', [8741]], ['DownArrowBar', [10515]], ['downarrow', [8595]], ['DownArrow', [8595]], ['Downarrow', [8659]], ['DownArrowUpArrow', [8693]], ['DownBreve', [785]], ['downdownarrows', [8650]], ['downharpoonleft', [8643]], ['downharpoonright', [8642]], ['DownLeftRightVector', [10576]], ['DownLeftTeeVector', [10590]], ['DownLeftVectorBar', [10582]], ['DownLeftVector', [8637]], ['DownRightTeeVector', [10591]], ['DownRightVectorBar', [10583]], ['DownRightVector', [8641]], ['DownTeeArrow', [8615]], ['DownTee', [8868]], ['drbkarow', [10512]], ['drcorn', [8991]], ['drcrop', [8972]], ['Dscr', [119967]], ['dscr', [119993]], ['DScy', [1029]], ['dscy', [1109]], ['dsol', [10742]], ['Dstrok', [272]], ['dstrok', [273]], ['dtdot', [8945]], ['dtri', [9663]], ['dtrif', [9662]], ['duarr', [8693]], ['duhar', [10607]], ['dwangle', [10662]], ['DZcy', [1039]], ['dzcy', [1119]], ['dzigrarr', [10239]], ['Eacute', [201]], ['eacute', [233]], ['easter', [10862]], ['Ecaron', [282]], ['ecaron', [283]], ['Ecirc', [202]], ['ecirc', [234]], ['ecir', [8790]], ['ecolon', [8789]], ['Ecy', [1069]], ['ecy', [1101]], ['eDDot', [10871]], ['Edot', [278]], ['edot', [279]], ['eDot', [8785]], ['ee', [8519]], ['efDot', [8786]], ['Efr', [120072]], ['efr', [120098]], ['eg', [10906]], ['Egrave', [200]], ['egrave', [232]], ['egs', [10902]], ['egsdot', [10904]], ['el', [10905]], ['Element', [8712]], ['elinters', [9191]], ['ell', [8467]], ['els', [10901]], ['elsdot', [10903]], ['Emacr', [274]], ['emacr', [275]], ['empty', [8709]], ['emptyset', [8709]], ['EmptySmallSquare', [9723]], ['emptyv', [8709]], ['EmptyVerySmallSquare', [9643]], ['emsp13', [8196]], ['emsp14', [8197]], ['emsp', [8195]], ['ENG', [330]], ['eng', [331]], ['ensp', [8194]], ['Eogon', [280]], ['eogon', [281]], ['Eopf', [120124]], ['eopf', [120150]], ['epar', [8917]], ['eparsl', [10723]], ['eplus', [10865]], ['epsi', [949]], ['Epsilon', [917]], ['epsilon', [949]], ['epsiv', [1013]], ['eqcirc', [8790]], ['eqcolon', [8789]], ['eqsim', [8770]], ['eqslantgtr', [10902]], ['eqslantless', [10901]], ['Equal', [10869]], ['equals', [61]], ['EqualTilde', [8770]], ['equest', [8799]], ['Equilibrium', [8652]], ['equiv', [8801]], ['equivDD', [10872]], ['eqvparsl', [10725]], ['erarr', [10609]], ['erDot', [8787]], ['escr', [8495]], ['Escr', [8496]], ['esdot', [8784]], ['Esim', [10867]], ['esim', [8770]], ['Eta', [919]], ['eta', [951]], ['ETH', [208]], ['eth', [240]], ['Euml', [203]], ['euml', [235]], ['euro', [8364]], ['excl', [33]], ['exist', [8707]], ['Exists', [8707]], ['expectation', [8496]], ['exponentiale', [8519]], ['ExponentialE', [8519]], ['fallingdotseq', [8786]], ['Fcy', [1060]], ['fcy', [1092]], ['female', [9792]], ['ffilig', [64259]], ['fflig', [64256]], ['ffllig', [64260]], ['Ffr', [120073]], ['ffr', [120099]], ['filig', [64257]], ['FilledSmallSquare', [9724]], ['FilledVerySmallSquare', [9642]], ['fjlig', [102, 106]], ['flat', [9837]], ['fllig', [64258]], ['fltns', [9649]], ['fnof', [402]], ['Fopf', [120125]], ['fopf', [120151]], ['forall', [8704]], ['ForAll', [8704]], ['fork', [8916]], ['forkv', [10969]], ['Fouriertrf', [8497]], ['fpartint', [10765]], ['frac12', [189]], ['frac13', [8531]], ['frac14', [188]], ['frac15', [8533]], ['frac16', [8537]], ['frac18', [8539]], ['frac23', [8532]], ['frac25', [8534]], ['frac34', [190]], ['frac35', [8535]], ['frac38', [8540]], ['frac45', [8536]], ['frac56', [8538]], ['frac58', [8541]], ['frac78', [8542]], ['frasl', [8260]], ['frown', [8994]], ['fscr', [119995]], ['Fscr', [8497]], ['gacute', [501]], ['Gamma', [915]], ['gamma', [947]], ['Gammad', [988]], ['gammad', [989]], ['gap', [10886]], ['Gbreve', [286]], ['gbreve', [287]], ['Gcedil', [290]], ['Gcirc', [284]], ['gcirc', [285]], ['Gcy', [1043]], ['gcy', [1075]], ['Gdot', [288]], ['gdot', [289]], ['ge', [8805]], ['gE', [8807]], ['gEl', [10892]], ['gel', [8923]], ['geq', [8805]], ['geqq', [8807]], ['geqslant', [10878]], ['gescc', [10921]], ['ges', [10878]], ['gesdot', [10880]], ['gesdoto', [10882]], ['gesdotol', [10884]], ['gesl', [8923, 65024]], ['gesles', [10900]], ['Gfr', [120074]], ['gfr', [120100]], ['gg', [8811]], ['Gg', [8921]], ['ggg', [8921]], ['gimel', [8503]], ['GJcy', [1027]], ['gjcy', [1107]], ['gla', [10917]], ['gl', [8823]], ['glE', [10898]], ['glj', [10916]], ['gnap', [10890]], ['gnapprox', [10890]], ['gne', [10888]], ['gnE', [8809]], ['gneq', [10888]], ['gneqq', [8809]], ['gnsim', [8935]], ['Gopf', [120126]], ['gopf', [120152]], ['grave', [96]], ['GreaterEqual', [8805]], ['GreaterEqualLess', [8923]], ['GreaterFullEqual', [8807]], ['GreaterGreater', [10914]], ['GreaterLess', [8823]], ['GreaterSlantEqual', [10878]], ['GreaterTilde', [8819]], ['Gscr', [119970]], ['gscr', [8458]], ['gsim', [8819]], ['gsime', [10894]], ['gsiml', [10896]], ['gtcc', [10919]], ['gtcir', [10874]], ['gt', [62]], ['GT', [62]], ['Gt', [8811]], ['gtdot', [8919]], ['gtlPar', [10645]], ['gtquest', [10876]], ['gtrapprox', [10886]], ['gtrarr', [10616]], ['gtrdot', [8919]], ['gtreqless', [8923]], ['gtreqqless', [10892]], ['gtrless', [8823]], ['gtrsim', [8819]], ['gvertneqq', [8809, 65024]], ['gvnE', [8809, 65024]], ['Hacek', [711]], ['hairsp', [8202]], ['half', [189]], ['hamilt', [8459]], ['HARDcy', [1066]], ['hardcy', [1098]], ['harrcir', [10568]], ['harr', [8596]], ['hArr', [8660]], ['harrw', [8621]], ['Hat', [94]], ['hbar', [8463]], ['Hcirc', [292]], ['hcirc', [293]], ['hearts', [9829]], ['heartsuit', [9829]], ['hellip', [8230]], ['hercon', [8889]], ['hfr', [120101]], ['Hfr', [8460]], ['HilbertSpace', [8459]], ['hksearow', [10533]], ['hkswarow', [10534]], ['hoarr', [8703]], ['homtht', [8763]], ['hookleftarrow', [8617]], ['hookrightarrow', [8618]], ['hopf', [120153]], ['Hopf', [8461]], ['horbar', [8213]], ['HorizontalLine', [9472]], ['hscr', [119997]], ['Hscr', [8459]], ['hslash', [8463]], ['Hstrok', [294]], ['hstrok', [295]], ['HumpDownHump', [8782]], ['HumpEqual', [8783]], ['hybull', [8259]], ['hyphen', [8208]], ['Iacute', [205]], ['iacute', [237]], ['ic', [8291]], ['Icirc', [206]], ['icirc', [238]], ['Icy', [1048]], ['icy', [1080]], ['Idot', [304]], ['IEcy', [1045]], ['iecy', [1077]], ['iexcl', [161]], ['iff', [8660]], ['ifr', [120102]], ['Ifr', [8465]], ['Igrave', [204]], ['igrave', [236]], ['ii', [8520]], ['iiiint', [10764]], ['iiint', [8749]], ['iinfin', [10716]], ['iiota', [8489]], ['IJlig', [306]], ['ijlig', [307]], ['Imacr', [298]], ['imacr', [299]], ['image', [8465]], ['ImaginaryI', [8520]], ['imagline', [8464]], ['imagpart', [8465]], ['imath', [305]], ['Im', [8465]], ['imof', [8887]], ['imped', [437]], ['Implies', [8658]], ['incare', [8453]], ['in', [8712]], ['infin', [8734]], ['infintie', [10717]], ['inodot', [305]], ['intcal', [8890]], ['int', [8747]], ['Int', [8748]], ['integers', [8484]], ['Integral', [8747]], ['intercal', [8890]], ['Intersection', [8898]], ['intlarhk', [10775]], ['intprod', [10812]], ['InvisibleComma', [8291]], ['InvisibleTimes', [8290]], ['IOcy', [1025]], ['iocy', [1105]], ['Iogon', [302]], ['iogon', [303]], ['Iopf', [120128]], ['iopf', [120154]], ['Iota', [921]], ['iota', [953]], ['iprod', [10812]], ['iquest', [191]], ['iscr', [119998]], ['Iscr', [8464]], ['isin', [8712]], ['isindot', [8949]], ['isinE', [8953]], ['isins', [8948]], ['isinsv', [8947]], ['isinv', [8712]], ['it', [8290]], ['Itilde', [296]], ['itilde', [297]], ['Iukcy', [1030]], ['iukcy', [1110]], ['Iuml', [207]], ['iuml', [239]], ['Jcirc', [308]], ['jcirc', [309]], ['Jcy', [1049]], ['jcy', [1081]], ['Jfr', [120077]], ['jfr', [120103]], ['jmath', [567]], ['Jopf', [120129]], ['jopf', [120155]], ['Jscr', [119973]], ['jscr', [119999]], ['Jsercy', [1032]], ['jsercy', [1112]], ['Jukcy', [1028]], ['jukcy', [1108]], ['Kappa', [922]], ['kappa', [954]], ['kappav', [1008]], ['Kcedil', [310]], ['kcedil', [311]], ['Kcy', [1050]], ['kcy', [1082]], ['Kfr', [120078]], ['kfr', [120104]], ['kgreen', [312]], ['KHcy', [1061]], ['khcy', [1093]], ['KJcy', [1036]], ['kjcy', [1116]], ['Kopf', [120130]], ['kopf', [120156]], ['Kscr', [119974]], ['kscr', [120000]], ['lAarr', [8666]], ['Lacute', [313]], ['lacute', [314]], ['laemptyv', [10676]], ['lagran', [8466]], ['Lambda', [923]], ['lambda', [955]], ['lang', [10216]], ['Lang', [10218]], ['langd', [10641]], ['langle', [10216]], ['lap', [10885]], ['Laplacetrf', [8466]], ['laquo', [171]], ['larrb', [8676]], ['larrbfs', [10527]], ['larr', [8592]], ['Larr', [8606]], ['lArr', [8656]], ['larrfs', [10525]], ['larrhk', [8617]], ['larrlp', [8619]], ['larrpl', [10553]], ['larrsim', [10611]], ['larrtl', [8610]], ['latail', [10521]], ['lAtail', [10523]], ['lat', [10923]], ['late', [10925]], ['lates', [10925, 65024]], ['lbarr', [10508]], ['lBarr', [10510]], ['lbbrk', [10098]], ['lbrace', [123]], ['lbrack', [91]], ['lbrke', [10635]], ['lbrksld', [10639]], ['lbrkslu', [10637]], ['Lcaron', [317]], ['lcaron', [318]], ['Lcedil', [315]], ['lcedil', [316]], ['lceil', [8968]], ['lcub', [123]], ['Lcy', [1051]], ['lcy', [1083]], ['ldca', [10550]], ['ldquo', [8220]], ['ldquor', [8222]], ['ldrdhar', [10599]], ['ldrushar', [10571]], ['ldsh', [8626]], ['le', [8804]], ['lE', [8806]], ['LeftAngleBracket', [10216]], ['LeftArrowBar', [8676]], ['leftarrow', [8592]], ['LeftArrow', [8592]], ['Leftarrow', [8656]], ['LeftArrowRightArrow', [8646]], ['leftarrowtail', [8610]], ['LeftCeiling', [8968]], ['LeftDoubleBracket', [10214]], ['LeftDownTeeVector', [10593]], ['LeftDownVectorBar', [10585]], ['LeftDownVector', [8643]], ['LeftFloor', [8970]], ['leftharpoondown', [8637]], ['leftharpoonup', [8636]], ['leftleftarrows', [8647]], ['leftrightarrow', [8596]], ['LeftRightArrow', [8596]], ['Leftrightarrow', [8660]], ['leftrightarrows', [8646]], ['leftrightharpoons', [8651]], ['leftrightsquigarrow', [8621]], ['LeftRightVector', [10574]], ['LeftTeeArrow', [8612]], ['LeftTee', [8867]], ['LeftTeeVector', [10586]], ['leftthreetimes', [8907]], ['LeftTriangleBar', [10703]], ['LeftTriangle', [8882]], ['LeftTriangleEqual', [8884]], ['LeftUpDownVector', [10577]], ['LeftUpTeeVector', [10592]], ['LeftUpVectorBar', [10584]], ['LeftUpVector', [8639]], ['LeftVectorBar', [10578]], ['LeftVector', [8636]], ['lEg', [10891]], ['leg', [8922]], ['leq', [8804]], ['leqq', [8806]], ['leqslant', [10877]], ['lescc', [10920]], ['les', [10877]], ['lesdot', [10879]], ['lesdoto', [10881]], ['lesdotor', [10883]], ['lesg', [8922, 65024]], ['lesges', [10899]], ['lessapprox', [10885]], ['lessdot', [8918]], ['lesseqgtr', [8922]], ['lesseqqgtr', [10891]], ['LessEqualGreater', [8922]], ['LessFullEqual', [8806]], ['LessGreater', [8822]], ['lessgtr', [8822]], ['LessLess', [10913]], ['lesssim', [8818]], ['LessSlantEqual', [10877]], ['LessTilde', [8818]], ['lfisht', [10620]], ['lfloor', [8970]], ['Lfr', [120079]], ['lfr', [120105]], ['lg', [8822]], ['lgE', [10897]], ['lHar', [10594]], ['lhard', [8637]], ['lharu', [8636]], ['lharul', [10602]], ['lhblk', [9604]], ['LJcy', [1033]], ['ljcy', [1113]], ['llarr', [8647]], ['ll', [8810]], ['Ll', [8920]], ['llcorner', [8990]], ['Lleftarrow', [8666]], ['llhard', [10603]], ['lltri', [9722]], ['Lmidot', [319]], ['lmidot', [320]], ['lmoustache', [9136]], ['lmoust', [9136]], ['lnap', [10889]], ['lnapprox', [10889]], ['lne', [10887]], ['lnE', [8808]], ['lneq', [10887]], ['lneqq', [8808]], ['lnsim', [8934]], ['loang', [10220]], ['loarr', [8701]], ['lobrk', [10214]], ['longleftarrow', [10229]], ['LongLeftArrow', [10229]], ['Longleftarrow', [10232]], ['longleftrightarrow', [10231]], ['LongLeftRightArrow', [10231]], ['Longleftrightarrow', [10234]], ['longmapsto', [10236]], ['longrightarrow', [10230]], ['LongRightArrow', [10230]], ['Longrightarrow', [10233]], ['looparrowleft', [8619]], ['looparrowright', [8620]], ['lopar', [10629]], ['Lopf', [120131]], ['lopf', [120157]], ['loplus', [10797]], ['lotimes', [10804]], ['lowast', [8727]], ['lowbar', [95]], ['LowerLeftArrow', [8601]], ['LowerRightArrow', [8600]], ['loz', [9674]], ['lozenge', [9674]], ['lozf', [10731]], ['lpar', [40]], ['lparlt', [10643]], ['lrarr', [8646]], ['lrcorner', [8991]], ['lrhar', [8651]], ['lrhard', [10605]], ['lrm', [8206]], ['lrtri', [8895]], ['lsaquo', [8249]], ['lscr', [120001]], ['Lscr', [8466]], ['lsh', [8624]], ['Lsh', [8624]], ['lsim', [8818]], ['lsime', [10893]], ['lsimg', [10895]], ['lsqb', [91]], ['lsquo', [8216]], ['lsquor', [8218]], ['Lstrok', [321]], ['lstrok', [322]], ['ltcc', [10918]], ['ltcir', [10873]], ['lt', [60]], ['LT', [60]], ['Lt', [8810]], ['ltdot', [8918]], ['lthree', [8907]], ['ltimes', [8905]], ['ltlarr', [10614]], ['ltquest', [10875]], ['ltri', [9667]], ['ltrie', [8884]], ['ltrif', [9666]], ['ltrPar', [10646]], ['lurdshar', [10570]], ['luruhar', [10598]], ['lvertneqq', [8808, 65024]], ['lvnE', [8808, 65024]], ['macr', [175]], ['male', [9794]], ['malt', [10016]], ['maltese', [10016]], ['Map', [10501]], ['map', [8614]], ['mapsto', [8614]], ['mapstodown', [8615]], ['mapstoleft', [8612]], ['mapstoup', [8613]], ['marker', [9646]], ['mcomma', [10793]], ['Mcy', [1052]], ['mcy', [1084]], ['mdash', [8212]], ['mDDot', [8762]], ['measuredangle', [8737]], ['MediumSpace', [8287]], ['Mellintrf', [8499]], ['Mfr', [120080]], ['mfr', [120106]], ['mho', [8487]], ['micro', [181]], ['midast', [42]], ['midcir', [10992]], ['mid', [8739]], ['middot', [183]], ['minusb', [8863]], ['minus', [8722]], ['minusd', [8760]], ['minusdu', [10794]], ['MinusPlus', [8723]], ['mlcp', [10971]], ['mldr', [8230]], ['mnplus', [8723]], ['models', [8871]], ['Mopf', [120132]], ['mopf', [120158]], ['mp', [8723]], ['mscr', [120002]], ['Mscr', [8499]], ['mstpos', [8766]], ['Mu', [924]], ['mu', [956]], ['multimap', [8888]], ['mumap', [8888]], ['nabla', [8711]], ['Nacute', [323]], ['nacute', [324]], ['nang', [8736, 8402]], ['nap', [8777]], ['napE', [10864, 824]], ['napid', [8779, 824]], ['napos', [329]], ['napprox', [8777]], ['natural', [9838]], ['naturals', [8469]], ['natur', [9838]], ['nbsp', [160]], ['nbump', [8782, 824]], ['nbumpe', [8783, 824]], ['ncap', [10819]], ['Ncaron', [327]], ['ncaron', [328]], ['Ncedil', [325]], ['ncedil', [326]], ['ncong', [8775]], ['ncongdot', [10861, 824]], ['ncup', [10818]], ['Ncy', [1053]], ['ncy', [1085]], ['ndash', [8211]], ['nearhk', [10532]], ['nearr', [8599]], ['neArr', [8663]], ['nearrow', [8599]], ['ne', [8800]], ['nedot', [8784, 824]], ['NegativeMediumSpace', [8203]], ['NegativeThickSpace', [8203]], ['NegativeThinSpace', [8203]], ['NegativeVeryThinSpace', [8203]], ['nequiv', [8802]], ['nesear', [10536]], ['nesim', [8770, 824]], ['NestedGreaterGreater', [8811]], ['NestedLessLess', [8810]], ['nexist', [8708]], ['nexists', [8708]], ['Nfr', [120081]], ['nfr', [120107]], ['ngE', [8807, 824]], ['nge', [8817]], ['ngeq', [8817]], ['ngeqq', [8807, 824]], ['ngeqslant', [10878, 824]], ['nges', [10878, 824]], ['nGg', [8921, 824]], ['ngsim', [8821]], ['nGt', [8811, 8402]], ['ngt', [8815]], ['ngtr', [8815]], ['nGtv', [8811, 824]], ['nharr', [8622]], ['nhArr', [8654]], ['nhpar', [10994]], ['ni', [8715]], ['nis', [8956]], ['nisd', [8954]], ['niv', [8715]], ['NJcy', [1034]], ['njcy', [1114]], ['nlarr', [8602]], ['nlArr', [8653]], ['nldr', [8229]], ['nlE', [8806, 824]], ['nle', [8816]], ['nleftarrow', [8602]], ['nLeftarrow', [8653]], ['nleftrightarrow', [8622]], ['nLeftrightarrow', [8654]], ['nleq', [8816]], ['nleqq', [8806, 824]], ['nleqslant', [10877, 824]], ['nles', [10877, 824]], ['nless', [8814]], ['nLl', [8920, 824]], ['nlsim', [8820]], ['nLt', [8810, 8402]], ['nlt', [8814]], ['nltri', [8938]], ['nltrie', [8940]], ['nLtv', [8810, 824]], ['nmid', [8740]], ['NoBreak', [8288]], ['NonBreakingSpace', [160]], ['nopf', [120159]], ['Nopf', [8469]], ['Not', [10988]], ['not', [172]], ['NotCongruent', [8802]], ['NotCupCap', [8813]], ['NotDoubleVerticalBar', [8742]], ['NotElement', [8713]], ['NotEqual', [8800]], ['NotEqualTilde', [8770, 824]], ['NotExists', [8708]], ['NotGreater', [8815]], ['NotGreaterEqual', [8817]], ['NotGreaterFullEqual', [8807, 824]], ['NotGreaterGreater', [8811, 824]], ['NotGreaterLess', [8825]], ['NotGreaterSlantEqual', [10878, 824]], ['NotGreaterTilde', [8821]], ['NotHumpDownHump', [8782, 824]], ['NotHumpEqual', [8783, 824]], ['notin', [8713]], ['notindot', [8949, 824]], ['notinE', [8953, 824]], ['notinva', [8713]], ['notinvb', [8951]], ['notinvc', [8950]], ['NotLeftTriangleBar', [10703, 824]], ['NotLeftTriangle', [8938]], ['NotLeftTriangleEqual', [8940]], ['NotLess', [8814]], ['NotLessEqual', [8816]], ['NotLessGreater', [8824]], ['NotLessLess', [8810, 824]], ['NotLessSlantEqual', [10877, 824]], ['NotLessTilde', [8820]], ['NotNestedGreaterGreater', [10914, 824]], ['NotNestedLessLess', [10913, 824]], ['notni', [8716]], ['notniva', [8716]], ['notnivb', [8958]], ['notnivc', [8957]], ['NotPrecedes', [8832]], ['NotPrecedesEqual', [10927, 824]], ['NotPrecedesSlantEqual', [8928]], ['NotReverseElement', [8716]], ['NotRightTriangleBar', [10704, 824]], ['NotRightTriangle', [8939]], ['NotRightTriangleEqual', [8941]], ['NotSquareSubset', [8847, 824]], ['NotSquareSubsetEqual', [8930]], ['NotSquareSuperset', [8848, 824]], ['NotSquareSupersetEqual', [8931]], ['NotSubset', [8834, 8402]], ['NotSubsetEqual', [8840]], ['NotSucceeds', [8833]], ['NotSucceedsEqual', [10928, 824]], ['NotSucceedsSlantEqual', [8929]], ['NotSucceedsTilde', [8831, 824]], ['NotSuperset', [8835, 8402]], ['NotSupersetEqual', [8841]], ['NotTilde', [8769]], ['NotTildeEqual', [8772]], ['NotTildeFullEqual', [8775]], ['NotTildeTilde', [8777]], ['NotVerticalBar', [8740]], ['nparallel', [8742]], ['npar', [8742]], ['nparsl', [11005, 8421]], ['npart', [8706, 824]], ['npolint', [10772]], ['npr', [8832]], ['nprcue', [8928]], ['nprec', [8832]], ['npreceq', [10927, 824]], ['npre', [10927, 824]], ['nrarrc', [10547, 824]], ['nrarr', [8603]], ['nrArr', [8655]], ['nrarrw', [8605, 824]], ['nrightarrow', [8603]], ['nRightarrow', [8655]], ['nrtri', [8939]], ['nrtrie', [8941]], ['nsc', [8833]], ['nsccue', [8929]], ['nsce', [10928, 824]], ['Nscr', [119977]], ['nscr', [120003]], ['nshortmid', [8740]], ['nshortparallel', [8742]], ['nsim', [8769]], ['nsime', [8772]], ['nsimeq', [8772]], ['nsmid', [8740]], ['nspar', [8742]], ['nsqsube', [8930]], ['nsqsupe', [8931]], ['nsub', [8836]], ['nsubE', [10949, 824]], ['nsube', [8840]], ['nsubset', [8834, 8402]], ['nsubseteq', [8840]], ['nsubseteqq', [10949, 824]], ['nsucc', [8833]], ['nsucceq', [10928, 824]], ['nsup', [8837]], ['nsupE', [10950, 824]], ['nsupe', [8841]], ['nsupset', [8835, 8402]], ['nsupseteq', [8841]], ['nsupseteqq', [10950, 824]], ['ntgl', [8825]], ['Ntilde', [209]], ['ntilde', [241]], ['ntlg', [8824]], ['ntriangleleft', [8938]], ['ntrianglelefteq', [8940]], ['ntriangleright', [8939]], ['ntrianglerighteq', [8941]], ['Nu', [925]], ['nu', [957]], ['num', [35]], ['numero', [8470]], ['numsp', [8199]], ['nvap', [8781, 8402]], ['nvdash', [8876]], ['nvDash', [8877]], ['nVdash', [8878]], ['nVDash', [8879]], ['nvge', [8805, 8402]], ['nvgt', [62, 8402]], ['nvHarr', [10500]], ['nvinfin', [10718]], ['nvlArr', [10498]], ['nvle', [8804, 8402]], ['nvlt', [60, 8402]], ['nvltrie', [8884, 8402]], ['nvrArr', [10499]], ['nvrtrie', [8885, 8402]], ['nvsim', [8764, 8402]], ['nwarhk', [10531]], ['nwarr', [8598]], ['nwArr', [8662]], ['nwarrow', [8598]], ['nwnear', [10535]], ['Oacute', [211]], ['oacute', [243]], ['oast', [8859]], ['Ocirc', [212]], ['ocirc', [244]], ['ocir', [8858]], ['Ocy', [1054]], ['ocy', [1086]], ['odash', [8861]], ['Odblac', [336]], ['odblac', [337]], ['odiv', [10808]], ['odot', [8857]], ['odsold', [10684]], ['OElig', [338]], ['oelig', [339]], ['ofcir', [10687]], ['Ofr', [120082]], ['ofr', [120108]], ['ogon', [731]], ['Ograve', [210]], ['ograve', [242]], ['ogt', [10689]], ['ohbar', [10677]], ['ohm', [937]], ['oint', [8750]], ['olarr', [8634]], ['olcir', [10686]], ['olcross', [10683]], ['oline', [8254]], ['olt', [10688]], ['Omacr', [332]], ['omacr', [333]], ['Omega', [937]], ['omega', [969]], ['Omicron', [927]], ['omicron', [959]], ['omid', [10678]], ['ominus', [8854]], ['Oopf', [120134]], ['oopf', [120160]], ['opar', [10679]], ['OpenCurlyDoubleQuote', [8220]], ['OpenCurlyQuote', [8216]], ['operp', [10681]], ['oplus', [8853]], ['orarr', [8635]], ['Or', [10836]], ['or', [8744]], ['ord', [10845]], ['order', [8500]], ['orderof', [8500]], ['ordf', [170]], ['ordm', [186]], ['origof', [8886]], ['oror', [10838]], ['orslope', [10839]], ['orv', [10843]], ['oS', [9416]], ['Oscr', [119978]], ['oscr', [8500]], ['Oslash', [216]], ['oslash', [248]], ['osol', [8856]], ['Otilde', [213]], ['otilde', [245]], ['otimesas', [10806]], ['Otimes', [10807]], ['otimes', [8855]], ['Ouml', [214]], ['ouml', [246]], ['ovbar', [9021]], ['OverBar', [8254]], ['OverBrace', [9182]], ['OverBracket', [9140]], ['OverParenthesis', [9180]], ['para', [182]], ['parallel', [8741]], ['par', [8741]], ['parsim', [10995]], ['parsl', [11005]], ['part', [8706]], ['PartialD', [8706]], ['Pcy', [1055]], ['pcy', [1087]], ['percnt', [37]], ['period', [46]], ['permil', [8240]], ['perp', [8869]], ['pertenk', [8241]], ['Pfr', [120083]], ['pfr', [120109]], ['Phi', [934]], ['phi', [966]], ['phiv', [981]], ['phmmat', [8499]], ['phone', [9742]], ['Pi', [928]], ['pi', [960]], ['pitchfork', [8916]], ['piv', [982]], ['planck', [8463]], ['planckh', [8462]], ['plankv', [8463]], ['plusacir', [10787]], ['plusb', [8862]], ['pluscir', [10786]], ['plus', [43]], ['plusdo', [8724]], ['plusdu', [10789]], ['pluse', [10866]], ['PlusMinus', [177]], ['plusmn', [177]], ['plussim', [10790]], ['plustwo', [10791]], ['pm', [177]], ['Poincareplane', [8460]], ['pointint', [10773]], ['popf', [120161]], ['Popf', [8473]], ['pound', [163]], ['prap', [10935]], ['Pr', [10939]], ['pr', [8826]], ['prcue', [8828]], ['precapprox', [10935]], ['prec', [8826]], ['preccurlyeq', [8828]], ['Precedes', [8826]], ['PrecedesEqual', [10927]], ['PrecedesSlantEqual', [8828]], ['PrecedesTilde', [8830]], ['preceq', [10927]], ['precnapprox', [10937]], ['precneqq', [10933]], ['precnsim', [8936]], ['pre', [10927]], ['prE', [10931]], ['precsim', [8830]], ['prime', [8242]], ['Prime', [8243]], ['primes', [8473]], ['prnap', [10937]], ['prnE', [10933]], ['prnsim', [8936]], ['prod', [8719]], ['Product', [8719]], ['profalar', [9006]], ['profline', [8978]], ['profsurf', [8979]], ['prop', [8733]], ['Proportional', [8733]], ['Proportion', [8759]], ['propto', [8733]], ['prsim', [8830]], ['prurel', [8880]], ['Pscr', [119979]], ['pscr', [120005]], ['Psi', [936]], ['psi', [968]], ['puncsp', [8200]], ['Qfr', [120084]], ['qfr', [120110]], ['qint', [10764]], ['qopf', [120162]], ['Qopf', [8474]], ['qprime', [8279]], ['Qscr', [119980]], ['qscr', [120006]], ['quaternions', [8461]], ['quatint', [10774]], ['quest', [63]], ['questeq', [8799]], ['quot', [34]], ['QUOT', [34]], ['rAarr', [8667]], ['race', [8765, 817]], ['Racute', [340]], ['racute', [341]], ['radic', [8730]], ['raemptyv', [10675]], ['rang', [10217]], ['Rang', [10219]], ['rangd', [10642]], ['range', [10661]], ['rangle', [10217]], ['raquo', [187]], ['rarrap', [10613]], ['rarrb', [8677]], ['rarrbfs', [10528]], ['rarrc', [10547]], ['rarr', [8594]], ['Rarr', [8608]], ['rArr', [8658]], ['rarrfs', [10526]], ['rarrhk', [8618]], ['rarrlp', [8620]], ['rarrpl', [10565]], ['rarrsim', [10612]], ['Rarrtl', [10518]], ['rarrtl', [8611]], ['rarrw', [8605]], ['ratail', [10522]], ['rAtail', [10524]], ['ratio', [8758]], ['rationals', [8474]], ['rbarr', [10509]], ['rBarr', [10511]], ['RBarr', [10512]], ['rbbrk', [10099]], ['rbrace', [125]], ['rbrack', [93]], ['rbrke', [10636]], ['rbrksld', [10638]], ['rbrkslu', [10640]], ['Rcaron', [344]], ['rcaron', [345]], ['Rcedil', [342]], ['rcedil', [343]], ['rceil', [8969]], ['rcub', [125]], ['Rcy', [1056]], ['rcy', [1088]], ['rdca', [10551]], ['rdldhar', [10601]], ['rdquo', [8221]], ['rdquor', [8221]], ['CloseCurlyDoubleQuote', [8221]], ['rdsh', [8627]], ['real', [8476]], ['realine', [8475]], ['realpart', [8476]], ['reals', [8477]], ['Re', [8476]], ['rect', [9645]], ['reg', [174]], ['REG', [174]], ['ReverseElement', [8715]], ['ReverseEquilibrium', [8651]], ['ReverseUpEquilibrium', [10607]], ['rfisht', [10621]], ['rfloor', [8971]], ['rfr', [120111]], ['Rfr', [8476]], ['rHar', [10596]], ['rhard', [8641]], ['rharu', [8640]], ['rharul', [10604]], ['Rho', [929]], ['rho', [961]], ['rhov', [1009]], ['RightAngleBracket', [10217]], ['RightArrowBar', [8677]], ['rightarrow', [8594]], ['RightArrow', [8594]], ['Rightarrow', [8658]], ['RightArrowLeftArrow', [8644]], ['rightarrowtail', [8611]], ['RightCeiling', [8969]], ['RightDoubleBracket', [10215]], ['RightDownTeeVector', [10589]], ['RightDownVectorBar', [10581]], ['RightDownVector', [8642]], ['RightFloor', [8971]], ['rightharpoondown', [8641]], ['rightharpoonup', [8640]], ['rightleftarrows', [8644]], ['rightleftharpoons', [8652]], ['rightrightarrows', [8649]], ['rightsquigarrow', [8605]], ['RightTeeArrow', [8614]], ['RightTee', [8866]], ['RightTeeVector', [10587]], ['rightthreetimes', [8908]], ['RightTriangleBar', [10704]], ['RightTriangle', [8883]], ['RightTriangleEqual', [8885]], ['RightUpDownVector', [10575]], ['RightUpTeeVector', [10588]], ['RightUpVectorBar', [10580]], ['RightUpVector', [8638]], ['RightVectorBar', [10579]], ['RightVector', [8640]], ['ring', [730]], ['risingdotseq', [8787]], ['rlarr', [8644]], ['rlhar', [8652]], ['rlm', [8207]], ['rmoustache', [9137]], ['rmoust', [9137]], ['rnmid', [10990]], ['roang', [10221]], ['roarr', [8702]], ['robrk', [10215]], ['ropar', [10630]], ['ropf', [120163]], ['Ropf', [8477]], ['roplus', [10798]], ['rotimes', [10805]], ['RoundImplies', [10608]], ['rpar', [41]], ['rpargt', [10644]], ['rppolint', [10770]], ['rrarr', [8649]], ['Rrightarrow', [8667]], ['rsaquo', [8250]], ['rscr', [120007]], ['Rscr', [8475]], ['rsh', [8625]], ['Rsh', [8625]], ['rsqb', [93]], ['rsquo', [8217]], ['rsquor', [8217]], ['CloseCurlyQuote', [8217]], ['rthree', [8908]], ['rtimes', [8906]], ['rtri', [9657]], ['rtrie', [8885]], ['rtrif', [9656]], ['rtriltri', [10702]], ['RuleDelayed', [10740]], ['ruluhar', [10600]], ['rx', [8478]], ['Sacute', [346]], ['sacute', [347]], ['sbquo', [8218]], ['scap', [10936]], ['Scaron', [352]], ['scaron', [353]], ['Sc', [10940]], ['sc', [8827]], ['sccue', [8829]], ['sce', [10928]], ['scE', [10932]], ['Scedil', [350]], ['scedil', [351]], ['Scirc', [348]], ['scirc', [349]], ['scnap', [10938]], ['scnE', [10934]], ['scnsim', [8937]], ['scpolint', [10771]], ['scsim', [8831]], ['Scy', [1057]], ['scy', [1089]], ['sdotb', [8865]], ['sdot', [8901]], ['sdote', [10854]], ['searhk', [10533]], ['searr', [8600]], ['seArr', [8664]], ['searrow', [8600]], ['sect', [167]], ['semi', [59]], ['seswar', [10537]], ['setminus', [8726]], ['setmn', [8726]], ['sext', [10038]], ['Sfr', [120086]], ['sfr', [120112]], ['sfrown', [8994]], ['sharp', [9839]], ['SHCHcy', [1065]], ['shchcy', [1097]], ['SHcy', [1064]], ['shcy', [1096]], ['ShortDownArrow', [8595]], ['ShortLeftArrow', [8592]], ['shortmid', [8739]], ['shortparallel', [8741]], ['ShortRightArrow', [8594]], ['ShortUpArrow', [8593]], ['shy', [173]], ['Sigma', [931]], ['sigma', [963]], ['sigmaf', [962]], ['sigmav', [962]], ['sim', [8764]], ['simdot', [10858]], ['sime', [8771]], ['simeq', [8771]], ['simg', [10910]], ['simgE', [10912]], ['siml', [10909]], ['simlE', [10911]], ['simne', [8774]], ['simplus', [10788]], ['simrarr', [10610]], ['slarr', [8592]], ['SmallCircle', [8728]], ['smallsetminus', [8726]], ['smashp', [10803]], ['smeparsl', [10724]], ['smid', [8739]], ['smile', [8995]], ['smt', [10922]], ['smte', [10924]], ['smtes', [10924, 65024]], ['SOFTcy', [1068]], ['softcy', [1100]], ['solbar', [9023]], ['solb', [10692]], ['sol', [47]], ['Sopf', [120138]], ['sopf', [120164]], ['spades', [9824]], ['spadesuit', [9824]], ['spar', [8741]], ['sqcap', [8851]], ['sqcaps', [8851, 65024]], ['sqcup', [8852]], ['sqcups', [8852, 65024]], ['Sqrt', [8730]], ['sqsub', [8847]], ['sqsube', [8849]], ['sqsubset', [8847]], ['sqsubseteq', [8849]], ['sqsup', [8848]], ['sqsupe', [8850]], ['sqsupset', [8848]], ['sqsupseteq', [8850]], ['square', [9633]], ['Square', [9633]], ['SquareIntersection', [8851]], ['SquareSubset', [8847]], ['SquareSubsetEqual', [8849]], ['SquareSuperset', [8848]], ['SquareSupersetEqual', [8850]], ['SquareUnion', [8852]], ['squarf', [9642]], ['squ', [9633]], ['squf', [9642]], ['srarr', [8594]], ['Sscr', [119982]], ['sscr', [120008]], ['ssetmn', [8726]], ['ssmile', [8995]], ['sstarf', [8902]], ['Star', [8902]], ['star', [9734]], ['starf', [9733]], ['straightepsilon', [1013]], ['straightphi', [981]], ['strns', [175]], ['sub', [8834]], ['Sub', [8912]], ['subdot', [10941]], ['subE', [10949]], ['sube', [8838]], ['subedot', [10947]], ['submult', [10945]], ['subnE', [10955]], ['subne', [8842]], ['subplus', [10943]], ['subrarr', [10617]], ['subset', [8834]], ['Subset', [8912]], ['subseteq', [8838]], ['subseteqq', [10949]], ['SubsetEqual', [8838]], ['subsetneq', [8842]], ['subsetneqq', [10955]], ['subsim', [10951]], ['subsub', [10965]], ['subsup', [10963]], ['succapprox', [10936]], ['succ', [8827]], ['succcurlyeq', [8829]], ['Succeeds', [8827]], ['SucceedsEqual', [10928]], ['SucceedsSlantEqual', [8829]], ['SucceedsTilde', [8831]], ['succeq', [10928]], ['succnapprox', [10938]], ['succneqq', [10934]], ['succnsim', [8937]], ['succsim', [8831]], ['SuchThat', [8715]], ['sum', [8721]], ['Sum', [8721]], ['sung', [9834]], ['sup1', [185]], ['sup2', [178]], ['sup3', [179]], ['sup', [8835]], ['Sup', [8913]], ['supdot', [10942]], ['supdsub', [10968]], ['supE', [10950]], ['supe', [8839]], ['supedot', [10948]], ['Superset', [8835]], ['SupersetEqual', [8839]], ['suphsol', [10185]], ['suphsub', [10967]], ['suplarr', [10619]], ['supmult', [10946]], ['supnE', [10956]], ['supne', [8843]], ['supplus', [10944]], ['supset', [8835]], ['Supset', [8913]], ['supseteq', [8839]], ['supseteqq', [10950]], ['supsetneq', [8843]], ['supsetneqq', [10956]], ['supsim', [10952]], ['supsub', [10964]], ['supsup', [10966]], ['swarhk', [10534]], ['swarr', [8601]], ['swArr', [8665]], ['swarrow', [8601]], ['swnwar', [10538]], ['szlig', [223]], ['Tab', [9]], ['target', [8982]], ['Tau', [932]], ['tau', [964]], ['tbrk', [9140]], ['Tcaron', [356]], ['tcaron', [357]], ['Tcedil', [354]], ['tcedil', [355]], ['Tcy', [1058]], ['tcy', [1090]], ['tdot', [8411]], ['telrec', [8981]], ['Tfr', [120087]], ['tfr', [120113]], ['there4', [8756]], ['therefore', [8756]], ['Therefore', [8756]], ['Theta', [920]], ['theta', [952]], ['thetasym', [977]], ['thetav', [977]], ['thickapprox', [8776]], ['thicksim', [8764]], ['ThickSpace', [8287, 8202]], ['ThinSpace', [8201]], ['thinsp', [8201]], ['thkap', [8776]], ['thksim', [8764]], ['THORN', [222]], ['thorn', [254]], ['tilde', [732]], ['Tilde', [8764]], ['TildeEqual', [8771]], ['TildeFullEqual', [8773]], ['TildeTilde', [8776]], ['timesbar', [10801]], ['timesb', [8864]], ['times', [215]], ['timesd', [10800]], ['tint', [8749]], ['toea', [10536]], ['topbot', [9014]], ['topcir', [10993]], ['top', [8868]], ['Topf', [120139]], ['topf', [120165]], ['topfork', [10970]], ['tosa', [10537]], ['tprime', [8244]], ['trade', [8482]], ['TRADE', [8482]], ['triangle', [9653]], ['triangledown', [9663]], ['triangleleft', [9667]], ['trianglelefteq', [8884]], ['triangleq', [8796]], ['triangleright', [9657]], ['trianglerighteq', [8885]], ['tridot', [9708]], ['trie', [8796]], ['triminus', [10810]], ['TripleDot', [8411]], ['triplus', [10809]], ['trisb', [10701]], ['tritime', [10811]], ['trpezium', [9186]], ['Tscr', [119983]], ['tscr', [120009]], ['TScy', [1062]], ['tscy', [1094]], ['TSHcy', [1035]], ['tshcy', [1115]], ['Tstrok', [358]], ['tstrok', [359]], ['twixt', [8812]], ['twoheadleftarrow', [8606]], ['twoheadrightarrow', [8608]], ['Uacute', [218]], ['uacute', [250]], ['uarr', [8593]], ['Uarr', [8607]], ['uArr', [8657]], ['Uarrocir', [10569]], ['Ubrcy', [1038]], ['ubrcy', [1118]], ['Ubreve', [364]], ['ubreve', [365]], ['Ucirc', [219]], ['ucirc', [251]], ['Ucy', [1059]], ['ucy', [1091]], ['udarr', [8645]], ['Udblac', [368]], ['udblac', [369]], ['udhar', [10606]], ['ufisht', [10622]], ['Ufr', [120088]], ['ufr', [120114]], ['Ugrave', [217]], ['ugrave', [249]], ['uHar', [10595]], ['uharl', [8639]], ['uharr', [8638]], ['uhblk', [9600]], ['ulcorn', [8988]], ['ulcorner', [8988]], ['ulcrop', [8975]], ['ultri', [9720]], ['Umacr', [362]], ['umacr', [363]], ['uml', [168]], ['UnderBar', [95]], ['UnderBrace', [9183]], ['UnderBracket', [9141]], ['UnderParenthesis', [9181]], ['Union', [8899]], ['UnionPlus', [8846]], ['Uogon', [370]], ['uogon', [371]], ['Uopf', [120140]], ['uopf', [120166]], ['UpArrowBar', [10514]], ['uparrow', [8593]], ['UpArrow', [8593]], ['Uparrow', [8657]], ['UpArrowDownArrow', [8645]], ['updownarrow', [8597]], ['UpDownArrow', [8597]], ['Updownarrow', [8661]], ['UpEquilibrium', [10606]], ['upharpoonleft', [8639]], ['upharpoonright', [8638]], ['uplus', [8846]], ['UpperLeftArrow', [8598]], ['UpperRightArrow', [8599]], ['upsi', [965]], ['Upsi', [978]], ['upsih', [978]], ['Upsilon', [933]], ['upsilon', [965]], ['UpTeeArrow', [8613]], ['UpTee', [8869]], ['upuparrows', [8648]], ['urcorn', [8989]], ['urcorner', [8989]], ['urcrop', [8974]], ['Uring', [366]], ['uring', [367]], ['urtri', [9721]], ['Uscr', [119984]], ['uscr', [120010]], ['utdot', [8944]], ['Utilde', [360]], ['utilde', [361]], ['utri', [9653]], ['utrif', [9652]], ['uuarr', [8648]], ['Uuml', [220]], ['uuml', [252]], ['uwangle', [10663]], ['vangrt', [10652]], ['varepsilon', [1013]], ['varkappa', [1008]], ['varnothing', [8709]], ['varphi', [981]], ['varpi', [982]], ['varpropto', [8733]], ['varr', [8597]], ['vArr', [8661]], ['varrho', [1009]], ['varsigma', [962]], ['varsubsetneq', [8842, 65024]], ['varsubsetneqq', [10955, 65024]], ['varsupsetneq', [8843, 65024]], ['varsupsetneqq', [10956, 65024]], ['vartheta', [977]], ['vartriangleleft', [8882]], ['vartriangleright', [8883]], ['vBar', [10984]], ['Vbar', [10987]], ['vBarv', [10985]], ['Vcy', [1042]], ['vcy', [1074]], ['vdash', [8866]], ['vDash', [8872]], ['Vdash', [8873]], ['VDash', [8875]], ['Vdashl', [10982]], ['veebar', [8891]], ['vee', [8744]], ['Vee', [8897]], ['veeeq', [8794]], ['vellip', [8942]], ['verbar', [124]], ['Verbar', [8214]], ['vert', [124]], ['Vert', [8214]], ['VerticalBar', [8739]], ['VerticalLine', [124]], ['VerticalSeparator', [10072]], ['VerticalTilde', [8768]], ['VeryThinSpace', [8202]], ['Vfr', [120089]], ['vfr', [120115]], ['vltri', [8882]], ['vnsub', [8834, 8402]], ['vnsup', [8835, 8402]], ['Vopf', [120141]], ['vopf', [120167]], ['vprop', [8733]], ['vrtri', [8883]], ['Vscr', [119985]], ['vscr', [120011]], ['vsubnE', [10955, 65024]], ['vsubne', [8842, 65024]], ['vsupnE', [10956, 65024]], ['vsupne', [8843, 65024]], ['Vvdash', [8874]], ['vzigzag', [10650]], ['Wcirc', [372]], ['wcirc', [373]], ['wedbar', [10847]], ['wedge', [8743]], ['Wedge', [8896]], ['wedgeq', [8793]], ['weierp', [8472]], ['Wfr', [120090]], ['wfr', [120116]], ['Wopf', [120142]], ['wopf', [120168]], ['wp', [8472]], ['wr', [8768]], ['wreath', [8768]], ['Wscr', [119986]], ['wscr', [120012]], ['xcap', [8898]], ['xcirc', [9711]], ['xcup', [8899]], ['xdtri', [9661]], ['Xfr', [120091]], ['xfr', [120117]], ['xharr', [10231]], ['xhArr', [10234]], ['Xi', [926]], ['xi', [958]], ['xlarr', [10229]], ['xlArr', [10232]], ['xmap', [10236]], ['xnis', [8955]], ['xodot', [10752]], ['Xopf', [120143]], ['xopf', [120169]], ['xoplus', [10753]], ['xotime', [10754]], ['xrarr', [10230]], ['xrArr', [10233]], ['Xscr', [119987]], ['xscr', [120013]], ['xsqcup', [10758]], ['xuplus', [10756]], ['xutri', [9651]], ['xvee', [8897]], ['xwedge', [8896]], ['Yacute', [221]], ['yacute', [253]], ['YAcy', [1071]], ['yacy', [1103]], ['Ycirc', [374]], ['ycirc', [375]], ['Ycy', [1067]], ['ycy', [1099]], ['yen', [165]], ['Yfr', [120092]], ['yfr', [120118]], ['YIcy', [1031]], ['yicy', [1111]], ['Yopf', [120144]], ['yopf', [120170]], ['Yscr', [119988]], ['yscr', [120014]], ['YUcy', [1070]], ['yucy', [1102]], ['yuml', [255]], ['Yuml', [376]], ['Zacute', [377]], ['zacute', [378]], ['Zcaron', [381]], ['zcaron', [382]], ['Zcy', [1047]], ['zcy', [1079]], ['Zdot', [379]], ['zdot', [380]], ['zeetrf', [8488]], ['ZeroWidthSpace', [8203]], ['Zeta', [918]], ['zeta', [950]], ['zfr', [120119]], ['Zfr', [8488]], ['ZHcy', [1046]], ['zhcy', [1078]], ['zigrarr', [8669]], ['zopf', [120171]], ['Zopf', [8484]], ['Zscr', [119989]], ['zscr', [120015]], ['zwj', [8205]], ['zwnj', [8204]]];\n\nvar alphaIndex = {};\nvar charIndex = {};\n\ncreateIndexes(alphaIndex, charIndex);\n\n/**\n * @constructor\n */\nfunction Html5Entities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&(#?[\\w\\d]+);?/g, function(s, entity) {\n        var chr;\n        if (entity.charAt(0) === \"#\") {\n            var code = entity.charAt(1) === 'x' ?\n                parseInt(entity.substr(2).toLowerCase(), 16) :\n                parseInt(entity.substr(1));\n\n            if (!(isNaN(code) || code < -32768 || code > 65535)) {\n                chr = String.fromCharCode(code);\n            }\n        } else {\n            chr = alphaIndex[entity];\n        }\n        return chr || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.decode = function(str) {\n    return new Html5Entities().decode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var charInfo = charIndex[str.charCodeAt(i)];\n        if (charInfo) {\n            var alpha = charInfo[str.charCodeAt(i + 1)];\n            if (alpha) {\n                i++;\n            } else {\n                alpha = charInfo[''];\n            }\n            if (alpha) {\n                result += \"&\" + alpha + \";\";\n                i++;\n                continue;\n            }\n        }\n        result += str.charAt(i);\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encode = function(str) {\n    return new Html5Entities().encode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        var charInfo = charIndex[c];\n        if (charInfo) {\n            var alpha = charInfo[str.charCodeAt(i + 1)];\n            if (alpha) {\n                i++;\n            } else {\n                alpha = charInfo[''];\n            }\n            if (alpha) {\n                result += \"&\" + alpha + \";\";\n                i++;\n                continue;\n            }\n        }\n        if (c < 32 || c > 126) {\n            result += '&#' + c + ';';\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encodeNonUTF = function(str) {\n    return new Html5Entities().encodeNonUTF(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nHtml5Entities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n Html5Entities.encodeNonASCII = function(str) {\n    return new Html5Entities().encodeNonASCII(str);\n };\n\n/**\n * @param {Object} alphaIndex Passed by reference.\n * @param {Object} charIndex Passed by reference.\n */\nfunction createIndexes(alphaIndex, charIndex) {\n    var i = ENTITIES.length;\n    var _results = [];\n    while (i--) {\n        var e = ENTITIES[i];\n        var alpha = e[0];\n        var chars = e[1];\n        var chr = chars[0];\n        var addChar = (chr < 32 || chr > 126) || chr === 62 || chr === 60 || chr === 38 || chr === 34 || chr === 39;\n        var charInfo;\n        if (addChar) {\n            charInfo = charIndex[chr] = charIndex[chr] || {};\n        }\n        if (chars[1]) {\n            var chr2 = chars[1];\n            alphaIndex[alpha] = String.fromCharCode(chr) + String.fromCharCode(chr2);\n            _results.push(addChar && (charInfo[chr2] = alpha));\n        } else {\n            alphaIndex[alpha] = String.fromCharCode(chr);\n            _results.push(addChar && (charInfo[''] = alpha));\n        }\n    }\n}\n\nmodule.exports = Html5Entities;\n","var ALPHA_INDEX = {\n    '&lt': '<',\n    '&gt': '>',\n    '&quot': '\"',\n    '&apos': '\\'',\n    '&amp': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&apos;': '\\'',\n    '&amp;': '&'\n};\n\nvar CHAR_INDEX = {\n    60: 'lt',\n    62: 'gt',\n    34: 'quot',\n    39: 'apos',\n    38: 'amp'\n};\n\nvar CHAR_S_INDEX = {\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&apos;',\n    '&': '&amp;'\n};\n\n/**\n * @constructor\n */\nfunction XmlEntities() {}\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/<|>|\"|'|&/g, function(s) {\n        return CHAR_S_INDEX[s];\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encode = function(str) {\n    return new XmlEntities().encode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.decode = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    return str.replace(/&#?[0-9a-zA-Z]+;?/g, function(s) {\n        if (s.charAt(1) === '#') {\n            var code = s.charAt(2).toLowerCase() === 'x' ?\n                parseInt(s.substr(3), 16) :\n                parseInt(s.substr(2));\n\n            if (isNaN(code) || code < -32768 || code > 65535) {\n                return '';\n            }\n            return String.fromCharCode(code);\n        }\n        return ALPHA_INDEX[s] || s;\n    });\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.decode = function(str) {\n    return new XmlEntities().decode(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encodeNonUTF = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLength = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLength) {\n        var c = str.charCodeAt(i);\n        var alpha = CHAR_INDEX[c];\n        if (alpha) {\n            result += \"&\" + alpha + \";\";\n            i++;\n            continue;\n        }\n        if (c < 32 || c > 126) {\n            result += '&#' + c + ';';\n        } else {\n            result += str.charAt(i);\n        }\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encodeNonUTF = function(str) {\n    return new XmlEntities().encodeNonUTF(str);\n };\n\n/**\n * @param {String} str\n * @returns {String}\n */\nXmlEntities.prototype.encodeNonASCII = function(str) {\n    if (!str || !str.length) {\n        return '';\n    }\n    var strLenght = str.length;\n    var result = '';\n    var i = 0;\n    while (i < strLenght) {\n        var c = str.charCodeAt(i);\n        if (c <= 255) {\n            result += str[i++];\n            continue;\n        }\n        result += '&#' + c + ';';\n        i++;\n    }\n    return result;\n};\n\n/**\n * @param {String} str\n * @returns {String}\n */\n XmlEntities.encodeNonASCII = function(str) {\n    return new XmlEntities().encodeNonASCII(str);\n };\n\nmodule.exports = XmlEntities;\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.7.3\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback retuns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport OfflineConstants from './constants/OfflineConstants';\nimport OfflineStream from './OfflineStream';\nimport OfflineIndexDBManifestParser from './utils/OfflineIndexDBManifestParser';\nimport OfflineErrors from './errors/OfflineErrors';\n\n/**\n * @class OfflineDownload\n */\nfunction OfflineDownload(config) {\n    config = config || {};\n\n    const manifestLoader = config.manifestLoader;\n    const adapter = config.adapter;\n    const offlineStoreController = config.offlineStoreController;\n    const manifestId = config.id;\n    const eventBus = config.eventBus;\n    const errHandler = config.errHandler;\n    const events = config.events;\n    const debug = config.debug;\n    const manifestUpdater = config.manifestUpdater;\n    const baseURLController = config.baseURLController;\n    const constants = config.constants;\n    const dashConstants = config.dashConstants;\n    const urlUtils = config.urlUtils;\n\n    const context = this.context;\n\n    let instance,\n        logger,\n        _manifestURL,\n        _offlineURL,\n        _xmlManifest,\n        _streams,\n        _manifest,\n        _isDownloadingStatus,\n        _isComposed,\n        _representationsToUpdate,\n        _indexDBManifestParser,\n        _progressionById,\n        _progression,\n        _status;\n\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        manifestUpdater.initialize();\n        _streams = [];\n        _isDownloadingStatus = false;\n        _isComposed = false;\n        _progressionById = {};\n        _progression = 0;\n        _status = undefined;\n    }\n\n    function getId() {\n        return manifestId;\n    }\n\n    function getOfflineUrl () {\n        return _offlineURL;\n    }\n\n    function getManifestUrl () {\n        return _manifestURL;\n    }\n\n    function getStatus () {\n        return _status;\n    }\n\n    function setInitialState(state) {\n        _offlineURL = state.url;\n        _progression = state.progress;\n        _manifestURL = state.originalUrl;\n        _status = state.status;\n    }\n\n    /**\n     * Download a stream, from url of manifest\n     * @param {string} url\n     * @instance\n     */\n    function downloadFromUrl(url) {\n        _manifestURL = url;\n        _offlineURL = `${OfflineConstants.OFFLINE_SCHEME}://${manifestId}`;\n        _status = OfflineConstants.OFFLINE_STATUS_CREATED;\n        setupOfflineEvents();\n        let offlineManifest = {\n            'fragmentStore': manifestId,\n            'status': _status,\n            'manifestId': manifestId,\n            'url': _offlineURL,\n            'originalURL': url\n        };\n        return createOfflineManifest(offlineManifest);\n    }\n\n    function initDownload() {\n        manifestLoader.load(_manifestURL);\n        _isDownloadingStatus = true;\n    }\n\n    function setupOfflineEvents() {\n        eventBus.on(events.MANIFEST_UPDATED, onManifestUpdated, instance);\n        eventBus.on(events.ORIGINAL_MANIFEST_LOADED, onOriginalManifestLoaded, instance);\n        setupIndexedDBEvents();\n    }\n\n    function setupIndexedDBEvents() {\n        eventBus.on(events.ERROR, onError, instance);\n    }\n\n    function isDownloading() {\n        return _isDownloadingStatus;\n    }\n\n    function onManifestUpdated(e) {\n        if (_isComposed) {\n            return;\n        }\n        if (!e.error) {\n            try {\n                _manifest = e.manifest;\n            } catch (err) {\n                _status = OfflineConstants.OFFLINE_STATUS_ERROR;\n                errHandler.error({\n                    code: OfflineErrors.OFFLINE_ERROR,\n                    message: err.message,\n                    data: {\n                        id: manifestId,\n                        status: _status\n                    }\n                });\n            }\n        }\n    }\n\n    function onDownloadingStarted(e) {\n        if (e.id !== manifestId) {\n            return;\n        }\n        if (!e.error && manifestId !== null) {\n            _status = OfflineConstants.OFFLINE_STATUS_STARTED;\n            offlineStoreController.setDownloadingStatus(manifestId, _status).then(function () {\n                eventBus.trigger(events.DOWNLOADING_STARTED, {id: manifestId, message: 'Downloading started for this stream !'});\n            });\n        } else {\n            _status = OfflineConstants.OFFLINE_STATUS_ERROR;\n            errHandler.error({\n                code: OfflineErrors.OFFLINE_ERROR,\n                message: 'Cannot start download ',\n                data: {\n                    id: manifestId,\n                    status: _status,\n                    error: e.error\n                }\n            });\n        }\n    }\n\n    function OnStreamProgression(stream, downloaded, available) {\n\n        _progressionById[stream.getStreamInfo().id] = {\n            downloaded,\n            available\n        };\n\n        let segments = 0;\n        let allSegments = 0;\n        let waitForAllProgress;\n        for (var property in _progressionById) {\n            if (_progressionById.hasOwnProperty(property)) {\n                if (_progressionById[property] === null) {\n                    waitForAllProgress = true;\n                } else {\n                    segments += _progressionById[property].downloaded;\n                    allSegments += _progressionById[property].available;\n                }\n            }\n        }\n\n        if (!waitForAllProgress) {\n            // all progression have been started, we can compute global progression\n            _progression = segments / allSegments;\n\n            // store progression\n            offlineStoreController.getManifestById(manifestId)\n                .then((item) => {\n                    item.progress = _progression;\n                    return updateOfflineManifest(item);\n                });\n        }\n    }\n\n    function onDownloadingFinished(e) {\n        if (e.id !== manifestId) {\n            return;\n        }\n        if (!e.error && manifestId !== null) {\n            _status = OfflineConstants.OFFLINE_STATUS_FINISHED;\n            offlineStoreController.setDownloadingStatus(manifestId, _status)\n            .then(function () {\n                eventBus.trigger(events.DOWNLOADING_FINISHED, {id: manifestId, message: 'Downloading has been successfully completed for this stream !'});\n                resetDownload();\n            });\n        } else {\n            _status = OfflineConstants.OFFLINE_STATUS_ERROR;\n            errHandler.error({\n                code: OfflineErrors.OFFLINE_ERROR,\n                message: 'Error finishing download ',\n                data: {\n                    id: manifestId,\n                    status: _status,\n                    error: e.error\n                }\n            });\n        }\n    }\n\n    function onManifestUpdateNeeded(e) {\n        if (e.id !== manifestId) {\n            return;\n        }\n\n        _representationsToUpdate = e.representations;\n\n        if (_representationsToUpdate.length > 0) {\n            _indexDBManifestParser.parse(_xmlManifest, _representationsToUpdate).then(function (parsedManifest) {\n                if (parsedManifest !== null && manifestId !== null) {\n                    offlineStoreController.getManifestById(manifestId)\n                    .then((item) => {\n                        item.manifest = parsedManifest;\n                        return updateOfflineManifest(item);\n                    })\n                    .then( function () {\n                        for (let i = 0, ln = _streams.length; i < ln; i++) {\n                            _streams[i].startOfflineStreamProcessors();\n                        }\n                    });\n                } else {\n                    throw 'falling parsing offline manifest';\n                }\n            }).catch(function (err) {\n                throw err;\n            });\n        }\n    }\n\n    function composeStreams() {\n        try {\n            adapter.updatePeriods(_manifest);\n            baseURLController.initialize(_manifest);\n            const streamsInfo = adapter.getStreamsInfo();\n            if (streamsInfo.length === 0) {\n                _status = OfflineConstants.OFFLINE_STATUS_ERROR;\n                errHandler.error({\n                    code: OfflineErrors.OFFLINE_ERROR,\n                    message: 'Cannot download - no streams',\n                    data: {\n                        id: manifestId,\n                        status: _status\n                    }\n                });\n            }\n            for (let i = 0, ln = streamsInfo.length; i < ln; i++) {\n                const streamInfo = streamsInfo[i];\n                let stream = OfflineStream(context).create({\n                    id: manifestId,\n                    callbacks: {\n                        started: onDownloadingStarted,\n                        progression: OnStreamProgression,\n                        finished: onDownloadingFinished,\n                        updateManifestNeeded: onManifestUpdateNeeded\n                    },\n                    constants: constants,\n                    eventBus: eventBus,\n                    events: events,\n                    debug: debug,\n                    adapter: adapter,\n                    offlineStoreController: offlineStoreController\n                });\n                _streams.push(stream);\n\n                // initialise stream and get downloadable representations\n                stream.initialize(streamInfo);\n                _progressionById[streamInfo.id] = null;\n            }\n            _isComposed = true;\n        } catch (e) {\n            logger.info(e);\n            _status = OfflineConstants.OFFLINE_STATUS_ERROR;\n            errHandler.error({\n                code: OfflineErrors.OFFLINE_ERROR,\n                message: e.message,\n                data: {\n                    id: manifestId,\n                    status: _status,\n                    error: e.error\n                }\n            });\n        }\n    }\n\n    function getDownloadableRepresentations() {\n        _streams.forEach(stream => {\n            stream.getDownloadableRepresentations();\n        });\n    }\n\n    /**\n     * Init databsse to store fragments\n     * @param {number} manifestId\n     * @instance\n     */\n    function createFragmentStore(manifestId) {\n        return offlineStoreController.createFragmentStore(manifestId);\n    }\n\n    /**\n     * Store in database the string representation of offline manifest (with only downloaded representations)\n     * @param {object} offlineManifest\n     * @instance\n     */\n    function createOfflineManifest(offlineManifest) {\n        return offlineStoreController.createOfflineManifest(offlineManifest);\n    }\n\n    /**\n     * Store in database the string representation of offline manifest (with only downloaded representations)\n     * @param {object} offlineManifest\n     * @instance\n     */\n    function updateOfflineManifest(offlineManifest) {\n        return offlineStoreController.updateOfflineManifest(offlineManifest);\n    }\n\n    /**\n     * Triggered when manifest is loaded from internet.\n     * @param {Object[]} e\n     */\n    function onOriginalManifestLoaded(e) {\n        // unregister form event\n        eventBus.off(events.ORIGINAL_MANIFEST_LOADED, onOriginalManifestLoaded, instance);\n\n        _xmlManifest = e.originalManifest;\n\n        if (_manifest.type === dashConstants.DYNAMIC) {\n            _status = OfflineConstants.OFFLINE_STATUS_ERROR;\n            errHandler.error({\n                code: OfflineErrors.OFFLINE_ERROR,\n                message: 'Cannot handle DYNAMIC manifest',\n                data: {\n                    id: manifestId,\n                    status: _status\n                }\n            });\n            logger.error('Cannot handle DYNAMIC manifest');\n\n            return;\n        }\n\n        if (_manifest.Period_asArray.length > 1) {\n            _status = OfflineConstants.OFFLINE_STATUS_ERROR;\n            errHandler.error({\n                code: OfflineErrors.OFFLINE_ERROR,\n                message: 'MultiPeriod manifest are not yet supported',\n                data: {\n                    id: manifestId,\n                    status: _status\n                }\n            });\n            logger.error('MultiPeriod manifest are not yet supported');\n\n            return;\n        }\n\n        // save original manifest (for resume)\n\n        // initialise offline streams\n        composeStreams(_manifest);\n\n        // get downloadable representations\n        getDownloadableRepresentations();\n\n        eventBus.trigger(events.STREAMS_COMPOSED);\n    }\n\n    function initializeAllMediasInfoList(selectedRepresentations) {\n        for (let i = 0; i < _streams.length; i++) {\n            _streams[i].initializeAllMediasInfoList(selectedRepresentations);\n        }\n    }\n\n    function formatSelectedRepresentations(selectedRepresentations) {\n        let ret = {\n        };\n\n        ret[constants.VIDEO] = [];\n        ret[constants.AUDIO] = [];\n        ret[constants.TEXT] = [];\n        ret[constants.FRAGMENTED_TEXT] = [];\n        selectedRepresentations.video.forEach(item => {\n            ret[constants.VIDEO].push(item.id);\n        });\n        selectedRepresentations.audio.forEach(item => {\n            ret[constants.AUDIO].push(item.id);\n        });\n        selectedRepresentations.text.forEach(item => {\n            ret[item.type].push(item.id);\n        });\n\n        return ret;\n    }\n\n    function startDownload(selectedRepresentations) {\n        try {\n            let rep = formatSelectedRepresentations(selectedRepresentations);\n\n            offlineStoreController.saveSelectedRepresentations(manifestId, rep)\n            .then(() => {\n                return createFragmentStore(manifestId);\n            })\n            .then(() => {\n                return generateOfflineManifest(_xmlManifest, rep, manifestId);\n            })\n            .then(function () {\n                initializeAllMediasInfoList(rep);\n            });\n        } catch (err) {\n            _status = OfflineConstants.OFFLINE_STATUS_ERROR;\n            errHandler.error({\n                code: OfflineErrors.OFFLINE_ERROR,\n                message: err.message,\n                data: {\n                    id: manifestId,\n                    status: _status\n                }\n            });\n        }\n    }\n\n    /**\n     * Create the parser used to convert original manifest in offline manifest\n     * Creates a JSON object that will be stored in database\n     * @param {string} XMLManifest\n     * @param {Object[]} selectedRepresentations\n     * @param {number} manifestId\n     * @instance\n     */\n    function generateOfflineManifest(XMLManifest, selectedRepresentations, manifestId) {\n        _indexDBManifestParser = OfflineIndexDBManifestParser(context).create({\n            manifestId: manifestId,\n            allMediaInfos: selectedRepresentations,\n            debug: debug,\n            dashConstants: dashConstants,\n            constants: constants,\n            urlUtils: urlUtils\n        });\n\n        return _indexDBManifestParser.parse(XMLManifest).then(function (parsedManifest) {\n            if (parsedManifest !== null && manifestId !== null) {\n                return offlineStoreController.getManifestById(manifestId)\n                .then((item) => {\n                    item.originalURL = _manifest.url;\n                    item.originalManifest = _manifest;\n                    item.manifest = parsedManifest;\n                    return updateOfflineManifest(item);\n                });\n            } else {\n                return Promise.reject('falling parsing offline manifest');\n            }\n        }).catch(function (err) {\n            return Promise.reject(err);\n        });\n    }\n\n    /**\n     * Stops downloading of fragments\n     * @instance\n     */\n    function stopDownload() {\n        if (manifestId !== null && isDownloading()) {\n            for (let i = 0, ln = _streams.length; i < ln; i++) {\n                _streams[i].stopOfflineStreamProcessors();\n            }\n\n            // remove streams\n            _streams = [];\n\n            _isComposed = false;\n\n            _status = OfflineConstants.OFFLINE_STATUS_STOPPED;\n            // update status\n            offlineStoreController.setDownloadingStatus(manifestId, _status).then(function () {\n                eventBus.trigger(events.DOWNLOADING_STOPPED, {\n                    sender: this,\n                    id: manifestId,\n                    status: _status,\n                    message: 'Downloading has been stopped for this stream !'\n                });\n                _isDownloadingStatus = false;\n            });\n        }\n    }\n\n    /**\n     * Delete an offline manifest (and all of its data)\n     * @instance\n     */\n    function deleteDownload() {\n        stopDownload();\n    }\n\n    /**\n     * Resume download of a stream\n     * @instance\n     */\n    function resumeDownload() {\n        if (!isDownloading()) {\n            _isDownloadingStatus = true;\n\n            let selectedRepresentation;\n\n            offlineStoreController.getManifestById(manifestId)\n            .then((item) => {\n                _manifest = item.originalManifest;\n                selectedRepresentation = item.selected;\n\n                composeStreams(_manifest);\n                eventBus.trigger(events.STREAMS_COMPOSED);\n\n                return createFragmentStore(manifestId);\n            }). then(() => {\n                initializeAllMediasInfoList(selectedRepresentation);\n            });\n        }\n    }\n\n    /**\n     * Compute the progression of download\n     * @instance\n     */\n    function getDownloadProgression() {\n        return Math.round(_progression * 100);\n    }\n\n    /**\n     * Reset events listeners\n     * @instance\n     */\n    function resetDownload() {\n        for (let i = 0, ln = _streams.length; i < ln; i++) {\n            _streams[i].reset();\n        }\n        _indexDBManifestParser = null;\n        _isDownloadingStatus = false;\n        _streams = [];\n        eventBus.off(events.MANIFEST_UPDATED, onManifestUpdated, instance);\n        eventBus.off(events.ORIGINAL_MANIFEST_LOADED, onOriginalManifestLoaded, instance);\n        resetIndexedDBEvents();\n    }\n\n    function onError(e) {\n        if ( e.error.code === OfflineErrors.INDEXEDDB_QUOTA_EXCEED_ERROR ||\n             e.error.code === OfflineErrors.INDEXEDDB_INVALID_STATE_ERROR ) {\n            stopDownload();\n        }\n    }\n\n    function resetIndexedDBEvents() {\n        eventBus.on(events.ERROR, onError, instance);\n    }\n\n    /**\n     * Reset\n     * @instance\n     */\n    function reset() {\n        if (isDownloading()) {\n            resetDownload();\n        }\n        baseURLController.reset();\n        manifestUpdater.reset();\n    }\n\n    instance = {\n        reset: reset,\n        getId: getId,\n        getOfflineUrl: getOfflineUrl,\n        getManifestUrl: getManifestUrl,\n        getStatus: getStatus,\n        setInitialState: setInitialState,\n        initDownload: initDownload,\n        downloadFromUrl: downloadFromUrl,\n        startDownload: startDownload,\n        stopDownload: stopDownload,\n        resumeDownload: resumeDownload,\n        deleteDownload: deleteDownload,\n        getDownloadProgression: getDownloadProgression,\n        isDownloading: isDownloading,\n        resetDownload: resetDownload\n    };\n\n    setup();\n\n    return instance;\n}\n\nOfflineDownload.__dashjs_factory_name = 'OfflineDownload';\nexport default dashjs.FactoryMaker.getClassFactory(OfflineDownload); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport OfflineStreamProcessor from './OfflineStreamProcessor';\n\n/**\n * @module  OfflineStream\n * @description Initialize and Manage Offline Stream for each type\n * @param {Object} config - dependences\n */\nfunction OfflineStream(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const constants = config.constants;\n    const debug = config.debug;\n    const adapter = config.adapter;\n    const offlineStoreController = config.offlineStoreController;\n    const manifestId = config.id;\n    const startedCb = config.callbacks && config.callbacks.started;\n    const progressionCb = config.callbacks && config.callbacks.progression;\n    const finishedCb = config.callbacks && config.callbacks.finished;\n    const updateManifest = config.callbacks && config.callbacks.updateManifestNeeded;\n\n    let instance,\n        offlineStreamProcessors,\n        startedOfflineStreamProcessors,\n        finishedOfflineStreamProcessors,\n        streamInfo,\n        representationsToUpdate,\n        allMediasInfosList,\n        progressionById;\n\n    function setup() {\n        resetInitialSettings();\n    }\n\n    /**\n     * Reset\n     */\n    function resetInitialSettings() {\n        streamInfo = null;\n        offlineStreamProcessors = [];\n        startedOfflineStreamProcessors = 0;\n        finishedOfflineStreamProcessors = 0;\n        allMediasInfosList = [];\n        representationsToUpdate = [];\n        progressionById = {};\n    }\n\n    /**\n     * Initialize offlinestream\n     * @param {Object} initStreamInfo\n     */\n    function initialize(initStreamInfo) {\n        streamInfo = initStreamInfo;\n        eventBus.on(events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n    }\n\n    /**\n     * Creates media bitrate list, so that user will be able to choose the representation he wants to download\n     */\n    function getDownloadableRepresentations() {\n        let downloadableRepresentations = {\n            video: [],\n            audio: [],\n            text: []\n        };\n\n        const trackKindMap = { subtitle: 'subtitles', caption: 'captions' }; //Dash Spec has no \"s\" on end of KIND but HTML needs plural.\n        const getKind = function (mediaInfo) {\n            let kind = (mediaInfo.roles.length > 0) ? trackKindMap[mediaInfo.roles[0]] : trackKindMap.caption;\n            kind = (kind === trackKindMap.caption || kind === trackKindMap.subtitle) ? kind : trackKindMap.caption;\n            return kind;\n        };\n\n        // video\n        let mediaInfo = adapter.getAllMediaInfoForType(streamInfo, constants.VIDEO);\n        if (mediaInfo.length > 0) {\n            mediaInfo.forEach((item) => {\n                item.bitrateList.forEach((bitrate) => {\n                    downloadableRepresentations.video.push({\n                        id: bitrate.id,\n                        bandwidth: bitrate.bandwidth,\n                        width: bitrate.width,\n                        height: bitrate.height\n                    });\n                });\n            });\n        }\n\n        // audio\n        mediaInfo = adapter.getAllMediaInfoForType(streamInfo, constants.AUDIO);\n        if (mediaInfo.length > 0) {\n            mediaInfo.forEach((item) => {\n                item.bitrateList.forEach((bitrate) => {\n                    downloadableRepresentations.audio.push({\n                        id: bitrate.id,\n                        bandwidth: bitrate.bandwidth,\n                        lang: item.lang\n                    });\n                });\n            });\n        }\n\n        // text\n\n        const addTextInfo = function (infos, type) {\n            if (infos.length > 0) {\n\n                infos.forEach((item) => {\n                    item.bitrateList.forEach((bitrate) => {\n                        downloadableRepresentations.text.push({\n                            id: bitrate.id,\n                            lang: item.lang,\n                            kind: getKind(item),\n                            roles: item.roles,\n                            accessibility: item.accessibility,\n                            type: type\n                        });\n                    });\n                });\n            }\n        };\n\n        mediaInfo = adapter.getAllMediaInfoForType(streamInfo, constants.FRAGMENTED_TEXT);\n        addTextInfo(mediaInfo, constants.FRAGMENTED_TEXT);\n\n        mediaInfo = adapter.getAllMediaInfoForType(streamInfo, constants.TEXT);\n        addTextInfo(mediaInfo, constants.TEXT);\n\n        /**\n        mediaInfo = adapter.getAllMediaInfoForType(streamInfo, constants.MUXED);\n        if (mediaInfo.length > 0) {\n            downloadableRepresentations.push(mediaInfo);\n        }\n        mediaInfo = adapter.getAllMediaInfoForType(streamInfo, constants.IMAGE);\n        if (mediaInfo.length > 0) {\n            downloadableRepresentations.push(mediaInfo);\n        }\n        */\n\n        eventBus.trigger(events.DOWNLOADABLE_REPRESENTATIONS_LOADED, {\n            data: {\n                id: manifestId,\n                downloadableRepresentations: downloadableRepresentations\n            },\n            sender: this\n        });\n    }\n\n\n    /**\n     * Initialize with choosen representations by user\n     * @param {Object} mediasInfoList\n     */\n    function initializeAllMediasInfoList(mediasInfoList) {\n        allMediasInfosList = mediasInfoList;\n        initializeMedia(streamInfo);\n    }\n\n    /**\n     * Initialize media for each type\n     * @param {Object} streamInfo\n     */\n    function initializeMedia(streamInfo) {\n        createOfflineStreamProcessorFor(constants.VIDEO,streamInfo);\n        createOfflineStreamProcessorFor(constants.AUDIO,streamInfo);\n        createOfflineStreamProcessorFor(constants.FRAGMENTED_TEXT,streamInfo);\n        createOfflineStreamProcessorFor(constants.TEXT,streamInfo);\n\n        for (let i = 0; i < offlineStreamProcessors.length; i++) {\n            offlineStreamProcessors[i].initialize();\n        }\n        /*\n        createOfflineStreamProcessorFor(constants.MUXED,streamInfo);\n        createOfflineStreamProcessorFor(constants.IMAGE,streamInfo);\n        */\n    }\n\n    function createOfflineStreamProcessorFor(type, streamInfo) {\n        // filter mediaInfo according to choosen representation id\n        let allMediaInfoForType = adapter.getAllMediaInfoForType(streamInfo, type);\n        allMediaInfoForType.forEach((media) => {\n            media.bitrateList = media.bitrateList.filter((bitrate) => {\n                if (allMediasInfosList[type] && allMediasInfosList[type].indexOf(bitrate.id) !== -1) {\n                    return true;\n                }\n                return false;\n            });\n        });\n\n        allMediaInfoForType = allMediaInfoForType.filter((media) => {\n            return (media.bitrateList && media.bitrateList.length > 0);\n        });\n\n        // cration of an offline stream processor for each choosen representation\n        allMediaInfoForType.forEach((mediaInfo) => {\n            if (mediaInfo.bitrateList) {\n                mediaInfo.bitrateList.forEach((bitrate) => {\n                    createStreamProcessor(mediaInfo, bitrate);\n                });\n            }\n        });\n        return allMediaInfoForType;\n    }\n\n    function createStreamProcessor (mediaInfo, bitrate) {\n\n        let streamProcessor = OfflineStreamProcessor(context).create({\n            id: manifestId,\n            callbacks: {\n                completed: onStreamCompleted,\n                progression: onStreamProgression\n            },\n            debug: debug,\n            events: events,\n            eventBus: eventBus,\n            constants: constants\n        });\n        streamProcessor.setConfig({\n            type: mediaInfo.type,\n            mimeType: mediaInfo.mimeType,\n            mediaInfo: mediaInfo,\n            bitrate: bitrate,\n            adapter: adapter,\n            stream: instance,\n            offlineStoreController: offlineStoreController\n        });\n        offlineStreamProcessors.push(streamProcessor);\n\n        progressionById[bitrate.id] = null;\n    }\n\n    function onStreamCompleted() {\n        finishedOfflineStreamProcessors++;\n        if (finishedOfflineStreamProcessors === offlineStreamProcessors.length) {\n            finishedCb({sender: this, id: manifestId, message: 'Downloading has been successfully completed for this stream !'});\n        }\n    }\n\n    function onStreamProgression(streamProcessor, downloadedSegments, availableSegments ) {\n        progressionById[streamProcessor.getRepresentationId()] = {\n            downloadedSegments,\n            availableSegments\n        };\n\n        let segments = 0;\n        let allSegments = 0;\n        let waitForAllProgress;\n        for (var property in progressionById) {\n            if (progressionById.hasOwnProperty(property)) {\n                if (progressionById[property] === null) {\n                    waitForAllProgress = true;\n                } else {\n                    segments += progressionById[property].downloadedSegments;\n                    allSegments += progressionById[property].availableSegments;\n                }\n            }\n        }\n\n        if (!waitForAllProgress && progressionCb) {\n            // all progression have been started, we can compute global progression\n            if (allSegments > 0) {\n                progressionCb(instance, segments, allSegments);\n            }\n        }\n    }\n\n    function onDataUpdateCompleted(e) {\n        let repCtrl = e.sender;\n        if (!streamInfo || repCtrl.getStreamId() !== streamInfo.id) return;\n\n        if (e.currentRepresentation.segments && e.currentRepresentation.segments.length > 0) {\n            representationsToUpdate.push(e.currentRepresentation);\n        }\n\n        let sp;\n        // data are ready fr stream processor, let's start download\n        for (let i = 0; i < offlineStreamProcessors.length; i++ ) {\n            if (offlineStreamProcessors[i].getRepresentationController() === repCtrl) {\n                sp = offlineStreamProcessors[i];\n                break;\n            }\n        }\n\n        if (sp) {\n            checkIfAllOfflineStreamProcessorsStarted();\n        }\n    }\n\n    function checkIfAllOfflineStreamProcessorsStarted() {\n        startedOfflineStreamProcessors++;\n        if (startedOfflineStreamProcessors === offlineStreamProcessors.length) {\n            startedCb({sender: this, id: manifestId, message: 'Downloading started for this stream !'});\n\n            if (representationsToUpdate.length > 0) {\n                updateManifest({sender: this, id: manifestId, representations: representationsToUpdate });\n            } else {\n                startOfflineStreamProcessors();\n            }\n        }\n    }\n\n    function getStreamInfo() {\n        return streamInfo;\n    }\n\n    function getStartTime() {\n        return streamInfo ? streamInfo.start : NaN;\n    }\n\n    function getDuration() {\n        return streamInfo ? streamInfo.duration : NaN;\n    }\n\n    /**\n     * Stop offline stream processors\n     */\n    function stopOfflineStreamProcessors() {\n        for (let i = 0; i < offlineStreamProcessors.length; i++) {\n            offlineStreamProcessors[i].stop();\n        }\n    }\n\n    /**\n     * Start offline stream processors\n     */\n    function startOfflineStreamProcessors() {\n        for (let i = 0; i < offlineStreamProcessors.length; i++) {\n            offlineStreamProcessors[i].start();\n        }\n    }\n\n    function deactivate() {\n        let ln = offlineStreamProcessors ? offlineStreamProcessors.length : 0;\n        for (let i = 0; i < ln; i++) {\n            offlineStreamProcessors[i].removeExecutedRequestsBeforeTime(getStartTime() + getDuration());\n            offlineStreamProcessors[i].reset();\n        }\n    }\n\n    /**\n     * Reset\n     */\n    function reset() {\n        stopOfflineStreamProcessors();\n        deactivate();\n        resetInitialSettings();\n\n        eventBus.off(events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n    }\n\n    instance = {\n        initialize: initialize,\n        getDownloadableRepresentations: getDownloadableRepresentations,\n        initializeAllMediasInfoList: initializeAllMediasInfoList,\n        getStreamInfo: getStreamInfo,\n        stopOfflineStreamProcessors: stopOfflineStreamProcessors,\n        startOfflineStreamProcessors: startOfflineStreamProcessors,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nOfflineStream.__dashjs_factory_name = 'OfflineStream';\nexport default dashjs.FactoryMaker.getClassFactory(OfflineStream); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport OfflineEvents from './events/OfflineEvents';\n\n/**\n * @module OfflineStreamProcessor\n * @param {object} config configuration\n * @description Arrange downloading for each type\n */\nfunction OfflineStreamProcessor(config) {\n\n    config = config || {};\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const debug = config.debug;\n    const constants = config.constants;\n    const manifestId = config.id;\n    const completedCb = config.callbacks && config.callbacks.completed;\n    const progressCb = config.callbacks && config.callbacks.progression;\n\n    let instance,\n        adapter,\n        logger,\n        indexHandler,\n        representationController,\n        type,\n        mimeType,\n        fragmentModel,\n        mediaInfo,\n        bitrate,\n        updating,\n        offlineStoreController,\n        downloadedSegments,\n        isInitialized,\n        isStopped,\n        stream;\n\n    function setConfig(config) {\n\n        if (!config) return;\n\n        if (config.type) {\n            type = config.type;\n        }\n\n        if (config.stream) {\n            stream = config.stream;\n        }\n\n        if (config.mimeType) {\n            mimeType = config.mimeType;\n        }\n\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n\n        if (config.mediaInfo) {\n            mediaInfo = config.mediaInfo;\n        }\n\n        if (config.bitrate) {\n            bitrate = config.bitrate;\n        }\n\n        if (config.offlineStoreController) {\n            offlineStoreController = config.offlineStoreController;\n        }\n    }\n\n    function setup() {\n        resetInitialSettings();\n        logger = debug.getLogger(instance);\n        eventBus.on(events.STREAM_COMPLETED, onStreamCompleted, instance);\n        eventBus.on(events.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, instance);\n    }\n\n    function isInitRequest(request) {\n        return request.type === 'InitializationSegment';\n    }\n\n    function onFragmentLoadingCompleted(e) {\n        if (e.sender !== fragmentModel) {\n            return;\n        }\n\n        if (e.request !== null) {\n            let isInit = isInitRequest(e.request);\n            let suffix = isInit ? 'init' : e.request.index;\n            let fragmentName = e.request.representationId + '_' + suffix;\n            offlineStoreController.storeFragment(manifestId, fragmentName, e.response)\n            .then(() => {\n                if (!isInit) {\n                    // store current index and downloadedSegments number\n                    offlineStoreController.setRepresentationCurrentState(manifestId, e.request.representationId, {\n                        index: e.request.index,\n                        downloaded: downloadedSegments\n                    } );\n                }\n            });\n        }\n\n        if (e.error && e.request.serviceLocation && !isStopped) {\n            fragmentModel.executeRequest(e.request);\n        } else {\n            downloadedSegments++;\n            download();\n        }\n    }\n\n    function onStreamCompleted(e) {\n        if (e.fragmentModel !== fragmentModel) {\n            return;\n        }\n        logger.info(`[${manifestId}] Stream is complete`);\n        stop();\n        completedCb();\n    }\n\n    function getRepresentationController () {\n        return representationController;\n    }\n\n    function getRepresentationId() {\n        return representationController.getCurrentRepresentation().id;\n    }\n\n    /**\n     * Stops download of fragments\n     * @memberof OfflineStreamProcessor#\n     */\n    function stop() {\n        if (isStopped) {\n            return;\n        }\n        isStopped = true;\n    }\n\n    function initializeDownloader () {\n        updateRepresentation(mediaInfo);\n    }\n\n    function setDashElements(handler, fragModel, repController) {\n        indexHandler = handler;\n        indexHandler.initialize(false);\n\n        fragmentModel = fragModel;\n        representationController = repController;\n\n        initializeDownloader();\n    }\n\n    /**\n     * Initialization\n     * @memberof OfflineStreamProcessor#\n    */\n    function initialize() {\n        eventBus.trigger(OfflineEvents.DASH_ELEMENTS_CREATION_NEEDED, {sender: instance, config: {type: type,\n            mimeType: mimeType,\n            streamInfo: getStreamInfo()}} );\n    }\n\n    function removeExecutedRequestsBeforeTime(time) {\n        if (fragmentModel) {\n            fragmentModel.removeExecutedRequestsBeforeTime(time);\n        }\n    }\n\n    /**\n     * Execute init request for the represenation\n     * @memberof OfflineStreamProcessor#\n    */\n    function getInitRequest() {\n        if (!representationController.getCurrentRepresentation()) {\n            return null;\n        }\n\n        return indexHandler.getInitRequest(getMediaInfo(), representationController.getCurrentRepresentation());\n    }\n\n    /**\n     * Get next request\n     * @memberof OfflineStreamProcessor#\n    */\n    function getNextRequest() {\n        return indexHandler.getNextSegmentRequest(getMediaInfo(), representationController.getCurrentRepresentation());\n    }\n\n    /**\n     * Start download\n     * @memberof OfflineStreamProcessor#\n    */\n    function start() {\n        if (representationController) {\n            if (!representationController.getCurrentRepresentation()) {\n                throw new Error('Start denied to OfflineStreamProcessor');\n            }\n            isStopped = false;\n\n            offlineStoreController.getRepresentationCurrentState(manifestId, representationController.getCurrentRepresentation().id)\n            .then((state) => {\n                if (state) {\n                    indexHandler.setCurrentIndex(state.index);\n                    downloadedSegments = state.downloaded;\n                }\n                download();\n            }).catch(() => {\n                // start from beginining\n                download();\n            });\n        }\n    }\n\n    /**\n     * Performs download of fragment according to type\n     * @memberof OfflineStreamProcessor#\n    */\n    function download() {\n        if (isStopped) {\n            return;\n        }\n\n        if (isNaN(representationController.getCurrentRepresentation())) {\n            let request = null;\n            if (!isInitialized) {\n                request = getInitRequest();\n                isInitialized = true;\n            } else {\n                request = getNextRequest();\n\n                // update progression : done here because availableSegmentsNumber is done in getNextRequest from dash handler\n                updateProgression();\n            }\n\n            if (request) {\n                logger.info(`[${manifestId}] download request : ${request.url}`);\n                fragmentModel.executeRequest(request);\n            } else {\n                logger.info(`[${manifestId}] no request to be downloaded`);\n            }\n        }\n    }\n\n    /**\n     * Update representation\n     * @param {Object} mediaInfo - mediaInfo\n     * @memberof OfflineStreamProcessor#\n     */\n    function updateRepresentation(mediaInfo) {\n        updating = true;\n\n        let voRepresentations = adapter.getVoRepresentations(mediaInfo);\n\n        // get representation VO according to id.\n        let quality = voRepresentations.findIndex((representation) => {\n            return representation.id === bitrate.id;\n        });\n\n        if (type !== constants.VIDEO && type !== constants.AUDIO  && type !== constants.TEXT && type !== constants.FRAGMENTED_TEXT) {\n            updating = false;\n            return;\n        }\n\n        representationController.updateData(null, voRepresentations, type, quality);\n    }\n\n    function getStreamInfo() {\n        return stream ? stream.getStreamInfo() : null;\n    }\n\n    function isUpdating() {\n        return updating;\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function getMediaInfo() {\n        return mediaInfo;\n    }\n\n    function getAvailableSegmentsNumber() {\n        return representationController.getCurrentRepresentation().availableSegmentsNumber + 1; // do not forget init segment\n    }\n\n    function updateProgression () {\n        if (progressCb) {\n            progressCb(instance, downloadedSegments, getAvailableSegmentsNumber());\n        }\n    }\n\n    function resetInitialSettings() {\n        isInitialized = false;\n        downloadedSegments = 0;\n        mimeType = null;\n        mediaInfo = null;\n        bitrate = null;\n        updating = false;\n        type = null;\n        stream = null;\n    }\n\n    /**\n     * Reset\n     * @memberof OfflineStreamProcessor#\n    */\n    function reset() {\n        resetInitialSettings();\n        indexHandler.reset();\n\n        eventBus.off(events.STREAM_COMPLETED, onStreamCompleted, instance);\n        eventBus.off(events.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, instance);\n    }\n\n    instance = {\n        initialize: initialize,\n        setConfig: setConfig,\n        getStreamInfo: getStreamInfo,\n        getMediaInfo: getMediaInfo,\n        getRepresentationController: getRepresentationController,\n        removeExecutedRequestsBeforeTime: removeExecutedRequestsBeforeTime,\n        getType: getType,\n        getRepresentationId: getRepresentationId,\n        isUpdating: isUpdating,\n        start: start,\n        stop: stop,\n        getAvailableSegmentsNumber: getAvailableSegmentsNumber,\n        setDashElements: setDashElements,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\nOfflineStreamProcessor.__dashjs_factory_name = 'OfflineStreamProcessor';\nconst factory = dashjs.FactoryMaker.getClassFactory(OfflineStreamProcessor); /* jshint ignore:line */\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Offline constants declaration\n * @class\n * @ignore\n */\nclass OfflineConstants {\n\n  init() {\n      this.OFFLINE_SCHEME = 'offline_indexdb';\n      this.OFFLINE_URL_REGEX = /^offline_indexdb:\\/\\//i;\n      this.OFFLINE_STATUS_CREATED = 'created';\n      this.OFFLINE_STATUS_STARTED = 'started';\n      this.OFFLINE_STATUS_STOPPED = 'stopped';\n      this.OFFLINE_STATUS_FINISHED = 'finished';\n      this.OFFLINE_STATUS_ERROR = 'error';\n  }\n\n  constructor () {\n      this.init();\n  }\n}\n\nlet constants = new OfflineConstants();\nexport default constants;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport OfflineConstants from '../constants/OfflineConstants';\nimport OfflineStoreController from './OfflineStoreController';\nimport OfflineDownload from '../OfflineDownload';\nimport IndexDBOfflineLoader from '../net/IndexDBOfflineLoader';\nimport OfflineUrlUtils from '../utils/OfflineUrlUtils';\nimport OfflineEvents from '../events/OfflineEvents';\nimport OfflineErrors from '../errors/OfflineErrors';\nimport OfflineDownloadVo from '../vo/OfflineDownloadVo';\n\n/**\n * @class OfflineController\n */\nfunction OfflineController() {\n\n    const context = this.context;\n\n    let instance,\n        downloads,\n        adapter,\n        schemeLoaderFactory,\n        debug,\n        logger,\n        manifestLoader,\n        manifestModel,\n        manifestUpdater,\n        baseURLController,\n        offlineStoreController,\n        urlUtils,\n        offlineUrlUtils,\n        events,\n        eventBus,\n        constants,\n        dashConstants,\n        errHandler;\n\n    function setup() {\n        offlineUrlUtils = OfflineUrlUtils(context).getInstance();\n\n        downloads = [];\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n\n        if (config.events && config.eventBus) {\n            events = config.events;\n            eventBus = config.eventBus;\n            offlineStoreController = OfflineStoreController(context).create({ eventBus: config.eventBus, errHandler: errHandler});\n        }\n\n        if (config.debug) {\n            debug = config.debug;\n            logger = debug.getLogger(instance);\n        }\n\n        if (config.manifestLoader) {\n            manifestLoader = config.manifestLoader;\n        }\n\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n\n        if (config.manifestUpdater) {\n            manifestUpdater = config.manifestUpdater;\n        }\n\n        if (config.baseURLController) {\n            baseURLController = config.baseURLController;\n        }\n\n        if (config.schemeLoaderFactory) {\n            schemeLoaderFactory = config.schemeLoaderFactory;\n        }\n\n        if (config.constants) {\n            constants = config.constants;\n        }\n\n        if (config.dashConstants) {\n            dashConstants = config.dashConstants;\n        }\n\n        if (config.urlUtils) {\n            urlUtils = config.urlUtils;\n            urlUtils.registerUrlRegex(offlineUrlUtils.getRegex(), offlineUrlUtils);\n        }\n\n        schemeLoaderFactory.registerLoader(OfflineConstants.OFFLINE_SCHEME, IndexDBOfflineLoader);\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        DOWNLOAD LIST FUNCTIONS\n\n    ---------------------------------------------------------------------------\n    */\n    function getDownloadFromId(id) {\n        let download = downloads.find((item) => {\n            return item.getId() === id;\n        });\n        return download;\n    }\n\n    function createDownloadFromId(id) {\n        let download;\n        download = getDownloadFromId(id);\n\n        if (!download) {\n            // create download controller\n            download = OfflineDownload(context).create({\n                id: id,\n                eventBus: eventBus,\n                events: events,\n                manifestLoader: manifestLoader,\n                manifestModel: manifestModel,\n                manifestUpdater: manifestUpdater,\n                baseURLController: baseURLController,\n                adapter: adapter,\n                errHandler: errHandler,\n                offlineStoreController: offlineStoreController,\n                debug: debug,\n                constants: constants,\n                dashConstants: dashConstants,\n                urlUtils: urlUtils\n            });\n\n            downloads.push(download);\n        }\n\n        return download;\n    }\n\n    function createDownloadFromStorage(offline) {\n        let download = getDownloadFromId(offline.manifestId);\n\n        if (!download) {\n            download = createDownloadFromId(offline.manifestId);\n            let status = offline.status;\n            if (status === OfflineConstants.OFFLINE_STATUS_STARTED) {\n                status = OfflineConstants.OFFLINE_STATUS_STOPPED;\n            }\n\n            download.setInitialState({\n                url: offline.url,\n                progress: offline.progress,\n                originalUrl: offline.originalURL,\n                status: status\n            });\n        }\n\n        return download;\n    }\n\n    function removeDownloadFromId(id) {\n        return new Promise(function (resolve, reject) {\n            let download = getDownloadFromId(id);\n            let waitForStatusChanged = false;\n            if (download) {\n                //is download running?\n                if (download.isDownloading()) {\n                    //register status changed event\n                    waitForStatusChanged = true;\n                    const downloadStopped = function () {\n                        eventBus.off(events.DOWNLOADING_STOPPED, downloadStopped, instance);\n                        return offlineStoreController.deleteDownloadById(id).then(function () {\n                            resolve();\n                        }).catch(function (err) {\n                            reject(err);\n                        });\n                    };\n                    eventBus.on(events.DOWNLOADING_STOPPED, downloadStopped, instance);\n                }\n                download.deleteDownload();\n                let index = downloads.indexOf(download);\n                downloads.splice(index, 1);\n            }\n\n            if (!waitForStatusChanged) {\n                resolve();\n            }\n        });\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        DOWNLOAD FUNCTIONS\n\n    ---------------------------------------------------------------------------\n    */\n    function generateManifestId() {\n        let timestamp = new Date().getTime();\n        return timestamp;\n    }\n\n    function loadDownloadsFromStorage() {\n\n        return new Promise(function (resolve, reject) {\n            offlineStoreController.getAllManifests().then((items) => {\n                items.manifests.forEach((offline) => {\n                    createDownloadFromStorage(offline);\n                });\n\n                resolve();\n            }).catch((e) => {\n                logger.error('Failed to load downloads ' + e);\n                reject(e);\n            });\n        });\n    }\n\n    function createDownload(url) {\n        return new Promise(function (resolve, reject) {\n            let id = generateManifestId();\n\n            // create download controller\n            let download = createDownloadFromId(id);\n\n            download.downloadFromUrl(url).then(() => {\n                resolve(id);\n            })\n            .catch((e) => {\n                logger.error('Failed to download ' + e);\n                removeDownloadFromId(id).then(function () {\n                    reject(e);\n                });\n            });\n        });\n    }\n\n    function initDownload(id) {\n        let download = getDownloadFromId(id);\n        if (download) {\n            download.initDownload();\n        }\n    }\n\n    function startDownload(id, selectedRepresentations) {\n        let download = getDownloadFromId(id);\n        if (download) {\n            download.startDownload(selectedRepresentations);\n        }\n    }\n\n    function getAllDownloads() {\n\n        let ret = [];\n        downloads.forEach((download) => {\n            const offlineDownload = new OfflineDownloadVo();\n            offlineDownload.id = download.getId();\n            offlineDownload.progress = download.getDownloadProgression();\n            offlineDownload.url = download.getOfflineUrl();\n            offlineDownload.originalUrl = download.getManifestUrl();\n            offlineDownload.status = download.getStatus();\n            ret.push(offlineDownload);\n        });\n\n        return ret;\n    }\n\n    function stopDownload(id) {\n        let download = getDownloadFromId(id);\n        if (download) {\n            download.stopDownload();\n        }\n    }\n\n    function deleteDownload(id) {\n        return removeDownloadFromId(id).then(function () {\n            return offlineStoreController.deleteDownloadById(id);\n        });\n    }\n\n    function resumeDownload(id) {\n        let download = getDownloadFromId(id);\n        if (download) {\n            download.resumeDownload();\n        }\n    }\n\n    function getDownloadProgression(id) {\n        let download = getDownloadFromId(id);\n        if (download) {\n            return download.getDownloadProgression();\n        }\n        return 0;\n    }\n\n    function resetDownloads() {\n        downloads.forEach((download) => {\n            download.resetDownload();\n        });\n    }\n\n    /**\n     * Reset\n     * @instance\n     */\n    function reset() {\n        resetDownloads();\n        schemeLoaderFactory.unregisterLoader(OfflineConstants.OFFLINE_SCHEME);\n    }\n\n    instance = {\n        setConfig: setConfig,\n        loadDownloadsFromStorage: loadDownloadsFromStorage,\n        createDownload: createDownload,\n        initDownload: initDownload,\n        startDownload: startDownload,\n        stopDownload: stopDownload,\n        resumeDownload: resumeDownload,\n        deleteDownload: deleteDownload,\n        getDownloadProgression: getDownloadProgression,\n        getAllDownloads: getAllDownloads,\n        resetDownloads: resetDownloads,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nOfflineController.__dashjs_factory_name = 'OfflineController';\nconst factory = dashjs.FactoryMaker.getClassFactory(OfflineController); /* jshint ignore:line */\nfactory.events = OfflineEvents;\nfactory.errors = OfflineErrors;\ndashjs.FactoryMaker.updateClassFactory(OfflineController.__dashjs_factory_name, factory); /* jshint ignore:line */\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport IndexDBStore from '../storage/IndexDBStore';\nimport OfflineErrors from '../errors/OfflineErrors';\n\n/**\n * @class OfflineStoreController\n * This class manages database store\n * @description Offline Storage Controller\n */\nfunction OfflineStoreController(config) {\n\n    config = config || {};\n    const context = this.context;\n    const errHandler = config.errHandler;\n\n    let instance,\n        indexDBStore;\n\n    function setup() {\n        indexDBStore = IndexDBStore(context).getInstance();\n    }\n\n    function createFragmentStore(manifestId, storeName) {\n        try {\n            indexDBStore.createFragmentStore(manifestId, storeName);\n        } catch (err) {\n            manageDOMError(err);\n        }\n    }\n\n    function storeFragment(manifestId, fragmentId, fragmentData) {\n        return indexDBStore.storeFragment(manifestId, fragmentId, fragmentData).catch(function (err) {\n            manageDOMError(err);\n        });\n    }\n\n    function createOfflineManifest(manifest) {\n        return indexDBStore.storeManifest(manifest).catch(function (err) {\n            manageDOMError(err);\n        });\n    }\n\n    function updateOfflineManifest(manifest) {\n        return indexDBStore.updateManifest(manifest).catch(function (err) {\n            manageDOMError(err);\n        });\n    }\n\n    function getManifestById(manifestId) {\n        return indexDBStore.getManifestById(manifestId).catch(function (err) {\n            manageDOMError(err);\n        });\n    }\n\n    function saveSelectedRepresentations (manifestId, selected) {\n        return indexDBStore.saveSelectedRepresentations(manifestId, selected).catch(function (err) {\n            manageDOMError(err);\n        });\n    }\n\n    function getCurrentHigherManifestId() {\n        return indexDBStore.getCurrentHigherManifestId().catch(function (err) {\n            manageDOMError(err);\n        });\n    }\n\n    function getAllManifests() {\n        return indexDBStore.getAllManifests().catch(function (err) {\n            manageDOMError(err);\n        });\n    }\n\n    function deleteDownloadById(manifestId) {\n        return indexDBStore.deleteDownloadById(manifestId).catch(function (err) {\n            manageDOMError(err);\n        });\n    }\n\n    function setDownloadingStatus(manifestId, status) {\n        return indexDBStore.setDownloadingStatus(manifestId, status).catch(function (err) {\n            manageDOMError(err);\n        });\n    }\n\n    function setRepresentationCurrentState(manifestId, representationId, state) {\n        return indexDBStore.setRepresentationCurrentState(manifestId, representationId, state).catch(function (err) {\n            manageDOMError(err);\n        });\n    }\n\n    function getRepresentationCurrentState(manifestId, representationId) {\n        return indexDBStore.getRepresentationCurrentState(manifestId, representationId).catch(function (err) {\n            manageDOMError(err);\n        });\n    }\n\n    function manageDOMError(err) {\n        let error;\n        if (err) {\n            switch (err.name) {\n                case 'QuotaExceededError':\n                    error = OfflineErrors.INDEXEDDB_QUOTA_EXCEED_ERROR;\n                    break;\n                case 'InvalidStateError':\n                    error = OfflineErrors.INDEXEDDB_INVALID_STATE_ERROR;\n                    break;\n                case 'NotFoundError':\n                    error = OfflineErrors.INDEXEDDB_NOT_FOUND_ERROR;\n                    break;\n                case 'VersionError':\n                    error = OfflineErrors.INDEXEDDB_VERSION_ERROR;\n                    break;\n                // TODO : Manage all DOM cases\n            }\n\n            // avoid importing DashJSError object from streaming\n            errHandler.error({code: error, message: err.name, data: err});\n        }\n    }\n\n    instance = {\n        storeFragment: storeFragment,\n        createOfflineManifest: createOfflineManifest,\n        updateOfflineManifest: updateOfflineManifest,\n        getManifestById: getManifestById,\n        saveSelectedRepresentations: saveSelectedRepresentations,\n        createFragmentStore: createFragmentStore,\n        getCurrentHigherManifestId: getCurrentHigherManifestId,\n        getAllManifests: getAllManifests,\n        deleteDownloadById: deleteDownloadById,\n        setDownloadingStatus: setDownloadingStatus,\n        setRepresentationCurrentState: setRepresentationCurrentState,\n        getRepresentationCurrentState: getRepresentationCurrentState\n    };\n\n    setup();\n\n    return instance;\n}\n\nOfflineStoreController.__dashjs_factory_name = 'OfflineStoreController';\nexport default dashjs.FactoryMaker.getClassFactory(OfflineStoreController); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * Offline Errors declaration\n * @class\n */\nclass Errors {\n    constructor () {\n        /**\n         * Error code returned when an error occurs in offline module\n         */\n        this.OFFLINE_ERROR = 11000;\n\n        // Based upon https://developer.mozilla.org/fr/docs/Web/API/DOMException\n        this.INDEXEDDB_QUOTA_EXCEED_ERROR = 11001;\n        this.INDEXEDDB_INVALID_STATE_ERROR = 11002;\n        this.INDEXEDDB_NOT_READABLE_ERROR = 11003;\n        this.INDEXEDDB_NOT_FOUND_ERROR = 11004;\n        this.INDEXEDDB_NETWORK_ERROR = 11005;\n        this.INDEXEDDB_DATA_ERROR = 11006;\n        this.INDEXEDDB_TRANSACTION_INACTIVE_ERROR = 11007;\n        this.INDEXEDDB_NOT_ALLOWED_ERROR = 11008;\n        this.INDEXEDDB_NOT_SUPPORTED_ERROR = 11009;\n        this.INDEXEDDB_VERSION_ERROR = 11010;\n        this.INDEXEDDB_TIMEOUT_ERROR = 11011;\n        this.INDEXEDDB_ABORT_ERROR = 11012;\n        this.INDEXEDDB_UNKNOWN_ERROR = 11013;\n    }\n}\n\nlet errors = new Errors();\nexport default errors;\n","import EventsBase from './../../core/events/EventsBase';\n/**\n * These are offline events that should be sent to the player level.\n * @class\n * @ignore\n */\nclass OfflineEvents extends EventsBase {\n    constructor () {\n        super();\n\n        this.DOWNLOADING_PAUSED = 'downloadingPaused';\n\n        /**\n         * Triggered when all mediaInfo has been loaded on OfflineStream\n         * Return a list of available bitrateInfo needed to download stream.\n         */\n        this.DOWNLOADABLE_REPRESENTATIONS_LOADED = 'public_downloadableRepresentationsInfoLoaded';\n\n        this.DASH_ELEMENTS_CREATION_NEEDED = 'dashElementsCreationNeeded';\n\n        /** Triggered when the downloading is initialize and started\n        * @event OfflineEvents#DOWNLOADING_STOPPED\n        */\n        this.DOWNLOADING_STARTED = 'public_downloadingStarted';\n\n        /**\n        * Triggered when the user stop current downloading\n        * @event OfflineEvents#DOWNLOADING_STOPPED\n        */\n        this.DOWNLOADING_STOPPED = 'public_downloadingStopped';\n\n        /**\n        * Triggered when all fragments has been downloaded\n        * @event OfflineEvents#DOWNLOADING_FINISHED\n        */\n        this.DOWNLOADING_FINISHED = 'public_downloadingFinished';\n    }\n}\n\nlet offlineEvents = new OfflineEvents();\nexport default offlineEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport OfflineController from './controllers/OfflineController';\n\n// Shove both of these into the global scope\nvar context = (typeof window !== 'undefined' && window) || global;\n\nvar dashjs = context.dashjs;\nif (!dashjs) {\n    dashjs = context.dashjs = {};\n}\n\ndashjs.OfflineController = OfflineController;\n\nexport default dashjs;\nexport { OfflineController };\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport IndexDBStore from '../storage/IndexDBStore';\n\n/**\n * @module\n * @description Load Offline resources\n * @param {Object} config - dependences\n */\nfunction IndexDBOfflineLoader(config) {\n    config = config || {};\n    const context = this.context;\n    const urlUtils = config.urlUtils;\n    const constants = config.constants;\n    const dashConstants = config.dashConstants;\n\n    let instance,\n        indexDBStore;\n\n    function setup() {\n        indexDBStore = IndexDBStore(context).getInstance();\n    }\n\n    function getManifestId (url) {\n        let myURL = urlUtils.removeHostname(url);\n        var parts = myURL.split('/');\n        return parts[0];\n    }\n    /**\n     * Load manifest or fragment from indexeddb database\n     * @param {object} config configuration of request\n     * @memberof module:offline\n     * @instance\n     */\n    function load(config) {\n        if (config.request) {\n            let manifestId = getManifestId(config.request.url);\n            if (manifestId % 1 === 0) {\n                if (\n                    config.request.mediaType === constants.AUDIO ||\n                    config.request.mediaType === constants.VIDEO ||\n                    config.request.mediaType === constants.TEXT ||\n                    config.request.mediaType === constants.MUXED ||\n                    config.request.mediaType === constants.IMAGE ||\n                    config.request.mediaType === constants.FRAGMENTED_TEXT ||\n                    config.request.mediaType === constants.EMBEDDED_TEXT\n                ) {\n                    let suffix = config.request.type === 'InitializationSegment' ? 'init' : config.request.index;\n                    let key = config.request.representationId + '_' + suffix;\n                    indexDBStore.getFragmentByKey(manifestId, key).then(function (fragment) {\n                        config.success(fragment, null, config.request.url, constants.ARRAY_BUFFER);\n                    }).catch(function (err) {\n                        config.error(err);\n                    });\n                } else if (config.request.type === dashConstants.MPD) {\n                    indexDBStore.getManifestById(manifestId).then(function (item) {\n                        indexDBStore.createFragmentStore(item.fragmentStore);\n                        config.success(item.manifest, null, config.request.url, constants.XML);\n                    }).catch(function (err) {\n                        config.error(config.request, 404, err);\n                    });\n                }\n            } else {\n                config.error(config.request, null, 'MediaType can not be found');\n            }\n        }\n    }\n\n    function abort() {\n        // nothing to do\n    }\n\n    setup();\n\n    instance = {\n        load: load,\n        abort: abort\n    };\n\n    return instance;\n}\n\nIndexDBOfflineLoader.__dashjs_factory_name = 'IndexDBOfflineLoader';\nconst factory = dashjs.FactoryMaker.getClassFactory(IndexDBOfflineLoader); /* jshint ignore:line */\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nconst localforage = require('localforage');\nconst entities = require('html-entities').XmlEntities;\n\n/**\n * @module  IndexDBStore\n * @description IndexedDB Access\n */\nfunction IndexDBStore() {\n\n    let instance,\n        manifestStore,\n        fragmentStores;\n\n    function setup() {\n        fragmentStores = {};\n\n        if (typeof window === 'undefined') {\n            return;\n        }\n\n        localforage.config({\n            driver: localforage.INDEXEDDB,\n            name: 'dash_offline_db'\n        });\n\n        manifestStore = localforage.createInstance({\n            driver: localforage.INDEXEDDB,\n            name: 'dash_offline_db',\n            version: 1.0,\n            storeName: 'manifest'\n        });\n    }\n\n    /////////////////////////////////////////\n    //\n    // GET/SET Methods\n    //\n    ////////////////////////////////////////\n\n    /**\n     * Creates an instance of localforage to store fragments in indexed db\n     * @param {string} storeName\n     * @memberof module:IndexDBStore\n     * @instance\n     */\n    function createFragmentStore(storeName) {\n\n        if (!fragmentStores[storeName]) {\n            console.log('setStore  ' + storeName);\n            let fragmentStore = localforage.createInstance({\n                driver: localforage.INDEXEDDB,\n                name: 'dash_offline_db',\n                version: 1.0,\n                storeName: storeName\n            });\n            fragmentStores[storeName] = fragmentStore;\n        }\n    }\n\n    /**\n     * Update download status\n     * @memberof module:IndexDBStore\n     * @param {number} manifestId\n     * @param {string} newStatus\n     * @returns {Promise} promise\n     * @instance\n     */\n    function setDownloadingStatus(manifestId, newStatus) {\n        return getManifestById(manifestId).then(function (item) {\n            item.status = newStatus;\n            return updateManifest(item).catch(function () {\n                return Promise.reject('Cannot set status ' + newStatus + ' for this stream !');\n            });\n        }).catch(function (err) {\n            return Promise.reject(err);\n        });\n    }\n\n    /**\n     * Updat last downloaded fragment index for representationId\n     * @memberof module:IndexDBStore\n     * @param {number} manifestId - manifest id\n      * @param {string} representationId - representation\n     * @param {number} state - representation state\n     * @returns {Promise} promise\n     * @instance\n     */\n    function setRepresentationCurrentState(manifestId, representationId, state) {\n        return getManifestById(manifestId).then(function (item) {\n            if (!item.state) {\n                item.state = {};\n            }\n\n            if (!item.state[representationId]) {\n                item.state[representationId] = {\n                    index: -1,\n                    downloaded: 0\n                };\n            }\n\n            item.state[representationId] = state;\n            return updateManifest(item).catch(function () {\n                return Promise.reject('Cannot set current index for represenation id ' + representationId);\n            });\n        }).catch(function (err) {\n            return Promise.reject(err);\n        });\n    }\n\n    /**\n     * Returns current downloaded segment index for representation\n     * @memberof module:IndexDBStore\n     * @param {number} manifestId - manifest id\n     * @param {string} representationId - representation\n     * @returns {Promise} promise\n     * @instance\n     */\n    function getRepresentationCurrentState(manifestId, representationId) {\n        return getManifestById(manifestId).then(function (item) {\n            let state = {\n                index: -1,\n                downloaded: 0\n            };\n            if (item.state && item.state[representationId]) {\n                state = item.state[representationId];\n            }\n            return Promise.resolve(state);\n        }).catch(function (err) {\n            return Promise.reject(err);\n        });\n    }\n\n    /**\n     * Returns a fragment from its key\n     * @memberof module:IndexDBStore\n     * @param {number} manifestId\n     * @param {number} key\n     * @returns {Promise} fragment\n     * @instance\n     */\n    function getFragmentByKey(manifestId, key) {\n        let fragmentStore = fragmentStores[manifestId];\n\n        if (!fragmentStore) {\n            return Promise.reject(new Error (`No fragment store found for manifest ${manifestId}`));\n        }\n\n        return fragmentStore.getItem(key).then(function (value) {\n            return Promise.resolve(value);\n        }).catch(function (err) {\n            return Promise.reject(err);\n        });\n\n    }\n\n    /**\n     * Returns a manifest from its identifier\n     * @memberof module:IndexDBStore\n     * @param {number} id\n     * @returns {Promise} {Object[]} manifests\n     * @instance\n     */\n    function getManifestById(id) {\n        return getAllManifests().then(function (array) {\n            if (array) {\n                let item = null;\n                for (let i = 0; i < array.manifests.length; i++) {\n                    if (array.manifests[i].manifestId === parseInt(id)) {\n                        item = array.manifests[i];\n                    }\n                }\n                if (item !== null) {\n                    item.manifest = entities.decode(item.manifest);\n                    return Promise.resolve(item);\n                } else {\n                    return Promise.reject('Cannot found manifest with this manifestId : ' + id);\n                }\n            } else {\n                return Promise.reject('Any manifests stored in DB !');\n            }\n        }).catch(function (err) {\n            return Promise.reject(err);\n        });\n    }\n\n    /**\n     * Returns all offline manifests\n     * @memberof module:IndexDBStore\n     * @returns {Promise} {Object[]} manifests\n     * @instance\n     */\n    function getAllManifests() {\n        return manifestStore.getItem('manifest').then(function (array) {\n            return Promise.resolve(array ? array : {\n                'manifests': []\n            });\n        }).catch(function (err) {\n            return Promise.reject(err);\n        });\n    }\n\n    /**\n     * Return higher manifest id\n     * @memberof module:IndexDBStore\n     * @returns {Promise} number\n     * @instance\n     */\n    function getCurrentHigherManifestId() {\n        return getAllManifests().then(function (array) {\n            let higherManifestId = 0;\n            if (array) {\n                for (let i = 0; i < array.manifests.length; i++) {\n                    if (array.manifests[i].manifestId > higherManifestId) {\n                        higherManifestId = array.manifests[i].manifestId;\n                    }\n                }\n                return Promise.resolve(higherManifestId);\n            } else {\n                return Promise.resolve(higherManifestId);\n            }\n        }).catch(function (err) {\n            return Promise.reject(err);\n        });\n    }\n\n    /**\n     * Update manifest\n     * @memberof module:IndexDBStore\n     * @param {Object} manifest updated manifest\n     * @returns {Promise} promise asynchronously resolved\n     * @instance\n     */\n    function updateManifest(manifest) {\n        return getAllManifests().then(function (array) {\n            try {\n                for (let i = 0; i < array.manifests.length; i++) {\n                    if (array.manifests[i].manifestId === manifest.manifestId) {\n                        array.manifests[i] = manifest;\n                    }\n                }\n                return manifestStore.setItem('manifest', array);\n            } catch (err) {\n                throw new Error('Any results found !');\n            }\n        });\n    }\n\n    /**\n     * save selected representation by user\n     * @memberof module:IndexDBStore\n     * @param {Object} manifest updated manifest\n     * @param {Object} selected selected representations\n     * @returns {Promise} promise asynchronously resolved\n     * @instance\n     */\n    function saveSelectedRepresentations(manifest, selected) {\n        return getManifestById(manifest).then(function (item) {\n            if (!item.selected) {\n                item.selected = {};\n            }\n\n            item.selected = selected;\n            return updateManifest(item).catch(function () {\n                return Promise.reject('Cannot save selected representations');\n            });\n        }).catch(function (err) {\n            return Promise.reject(err);\n        });\n    }\n\n    /**\n     * Store a manifest in manifest array\n     * @memberof module:IndexDBStore\n     * @param {Object} manifest\n     * @instance\n     */\n    function storeManifest(manifest) {\n        return manifestStore.getItem('manifest').then(function (results) {\n            let array = results ? results : {\n                'manifests': []\n            };\n            array.manifests.push(manifest);\n            return manifestStore.setItem('manifest', array);\n        });\n    }\n\n    /**\n     * Store a fragment in fragment store\n     * @memberof module:IndexDBStore\n     * @param {number} manifestId\n     * @param {number} fragmentId\n     * @param {Object} fragmentData\n     * @returns {Promise} promise asynchronously resolved\n     * @instance\n     */\n    function storeFragment(manifestId, fragmentId, fragmentData) {\n        let fragmentStore = fragmentStores[manifestId];\n\n        if (!fragmentStore) {\n            return Promise.reject(new Error (`No fragment store found for manifest ${manifestId}`));\n        }\n\n        return fragmentStore.setItem(fragmentId, fragmentData, function () {\n            return Promise.resolve();\n        }).catch(function (err) {\n            return Promise.reject(err);\n        });\n    }\n\n    /////////////////////////////////////////\n    //\n    // DROP Methods\n    //\n    ////////////////////////////////////////\n\n    /**\n     * Remove all manifest and fragment store\n     * @memberof module:IndexDBStore\n     * @returns {Promise} promise asynchronously resolved\n     * @instance\n     */\n    function dropAll() {\n        return localforage.clear().then(function () {\n            return Promise.resolve();\n        }).catch(function (err) {\n            return Promise.reject(err);\n        });\n    }\n\n    /**\n     * Remove framgent store given its name\n     * @param {string} storeName\n     * @memberof module:IndexDBStore\n     * @instance\n     */\n    function dropFragmentStore(storeName) {\n        localforage.dropInstance({\n            driver: localforage.INDEXEDDB,\n            name: 'dash_offline_db',\n            version: 1.0,\n            storeName: storeName\n        }).then(function () {\n            delete fragmentStores[storeName];\n        }).catch(function (err) {\n            console.log('dropFragmentStore failed ' + err);\n        });\n        return;\n    }\n\n    /**\n     * Remove download given its id (fragmentStore + manifest entry in manifest array)\n     * @memberof module:IndexDBStore\n     * @param {number} manifestId\n     * @returns {Promise} promise asynchronously resolved\n     * @instance\n     */\n    function deleteDownloadById(manifestId) {\n        return manifestStore.getItem('manifest').then(function (array) {\n            if (array) {\n                return deleteFragmentStore(manifestId).then(function () {\n                    for (let i = 0; i < array.manifests.length; i++) {\n                        if (array.manifests[i].manifestId === parseInt(manifestId)) {\n                            array.manifests.splice(i, 1);\n                        }\n                    }\n                    return manifestStore.setItem('manifest', array).then(function () {\n                        return Promise.resolve('This stream has been successfull removed !');\n                    }).catch(function () {\n                        return Promise.reject('An error occured when trying to delete this manifest');\n                    });\n                });\n            } else {\n                return Promise.resolve('Nothing to delete !');\n            }\n        }).catch(function (err) {\n            return Promise.reject(err);\n        });\n    }\n\n    /**\n     * Remove fragment store\n     * @memberof module:IndexDBStore\n     * @param {string} storeName\n     * @returns {Promise} promise asynchronously resolved\n     * @instance\n     */\n    function deleteFragmentStore(storeName) {\n        localforage.createInstance({\n            name: 'dash_offline_db',\n            storeName: storeName\n        });\n        return localforage.dropInstance({\n            name: 'dash_offline_db',\n            storeName: storeName\n        }).then(function () {\n            delete fragmentStores[storeName];\n            return Promise.resolve();\n        }).catch(function (err) {\n            console.log(err);\n            return Promise.reject(err);\n        });\n\n    }\n\n\n    setup();\n\n    instance = {\n        dropAll: dropAll,\n        getFragmentByKey: getFragmentByKey,\n        getManifestById: getManifestById,\n        storeFragment: storeFragment,\n        storeManifest: storeManifest,\n        updateManifest: updateManifest,\n        saveSelectedRepresentations: saveSelectedRepresentations,\n        createFragmentStore: createFragmentStore,\n        setDownloadingStatus: setDownloadingStatus,\n        setRepresentationCurrentState: setRepresentationCurrentState,\n        getRepresentationCurrentState: getRepresentationCurrentState,\n        getCurrentHigherManifestId: getCurrentHigherManifestId,\n        getAllManifests: getAllManifests,\n        dropFragmentStore: dropFragmentStore,\n        deleteDownloadById: deleteDownloadById\n    };\n\n    return instance;\n}\n\nIndexDBStore.__dashjs_factory_name = 'IndexDBStore';\nexport default dashjs.FactoryMaker.getSingletonFactory(IndexDBStore); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst Entities = require('html-entities').XmlEntities;\nconst OFFLINE_BASE_URL = 'offline_indexdb://';\n\n/**\n * @module OfflineIndexDBManifestParser\n * @description  Parse online manifest to offline manifest\n * @param {Object} config - dependances\n*/\nfunction OfflineIndexDBManifestParser(config) {\n\n    const manifestId = config.manifestId;\n    const allMediaInfos = config.allMediaInfos;\n    const urlUtils = config.urlUtils;\n    const debug = config.debug;\n    const dashConstants = config.dashConstants;\n    const constants = config.constants;\n\n    let instance,\n        DOM,\n        logger;\n\n\n    function setup() {\n        logger = debug.getLogger(instance);\n    }\n\n    /**\n     * Parse XML manifest\n     * @param {string} XMLDoc - xml manifest\n     * @param {object} representation\n     * @returns {Promise} a promise that will be resolved or rejected at the end of encoding process\n     * @memberof module:OfflineIndexDBManifestParser\n     * @instance\n    */\n    function parse(XMLDoc, representation) {\n        return new Promise(function (resolve, reject) {\n\n            DOM = new DOMParser().parseFromString(XMLDoc, 'application/xml');\n            let mpd = DOM.getElementsByTagName(dashConstants.MPD) ? DOM.getElementsByTagName(dashConstants.MPD) : null;\n\n            for (let i = 0; i < mpd.length; i++) {\n                if (mpd[i] !== null) {\n                    editBaseURLAttribute(mpd[i]);\n                    browsePeriods(mpd[i], representation);\n                }\n            }\n\n            let manifestEncoded = encodeManifest(DOM);\n            if (manifestEncoded !== '') {\n                resolve(manifestEncoded);\n            } else {\n                reject('Encoded error');\n            }\n        });\n    }\n\n    /**\n     * URL encode parsed manifest\n     * @param {string} DOM\n     * @memberof module:OfflineIndexDBManifestParser\n     * @returns {string} Url encoded XML\n     * @instance\n    */\n    function encodeManifest(DOM) {\n        logger.info('encodedManifest ' + new XMLSerializer().serializeToString(DOM));\n        return new Entities().encode(new XMLSerializer().serializeToString(DOM));\n    }\n\n    /**\n     * Update baseURL to point to local stored data P\n     * @param {XML} currentMPD\n     * @memberof module:OfflineIndexDBManifestParser\n     * @instance\n    */\n    function editBaseURLAttribute(currentMPD) {\n        let basesURL,\n            fragmentId,\n            representationId;\n\n        let url = `${OFFLINE_BASE_URL}${manifestId}/`;\n\n        basesURL = currentMPD.getElementsByTagName(dashConstants.BASE_URL);\n\n        if (basesURL.length === 0) {\n            // add baseURL\n            let element = DOM.createElement(dashConstants.BASE_URL);\n            element.innerHTML = url;\n            currentMPD.appendChild(element);\n        }\n        basesURL = currentMPD.getElementsByTagName(dashConstants.BASE_URL);\n        for (let i = 0; i < basesURL.length; i++) {\n            let parent = basesURL[i].parentNode;\n\n            if (parent.nodeName === dashConstants.MPD) {\n                basesURL[i].innerHTML = url;\n            } else if (parent.nodeName === dashConstants.REPRESENTATION) {\n                let adaptationsSet = parent.parentNode;\n                if (adaptationsSet.nodeName == dashConstants.ADAPTATION_SET) {\n\n                    if (urlUtils.isHTTPS(basesURL[i].innerHTML) || urlUtils.isHTTPURL(basesURL[i].innerHTML)) {\n                        fragmentId = getFragmentId(basesURL[i].innerHTML);\n                        representationId = getBestRepresentationId(adaptationsSet);\n                        basesURL[i].innerHTML = url + representationId + '_' + fragmentId;\n                    } else if (basesURL[i].innerHTML === './') {\n                        basesURL[i].innerHTML = url;\n                    } else {\n                        fragmentId = getFragmentId(basesURL[i].innerHTML);\n                        representationId = getBestRepresentationId(adaptationsSet);\n                        basesURL[i].innerHTML = representationId + '_' + fragmentId;\n                    }\n                }\n            } else {\n                basesURL[i].innerHTML = url;\n            }\n        }\n    }\n\n    /**\n     * Browse periods\n     * @param {XML} currentMPD\n     * @param {Object} representation\n     * @memberof module:OfflineIndexDBManifestParser\n     * @instance\n    */\n    function browsePeriods(currentMPD, representation) {\n        let periods = currentMPD.getElementsByTagName(dashConstants.PERIOD);\n        for (let j = 0; j < periods.length; j++) {\n            browseAdaptationsSet(periods[j], representation);\n        }\n    }\n\n    /**\n     * Browse adapatation set to update data (delete those taht are not choosen by user ...)\n     * @param {XML} currentPeriod\n     * @param {Array} representationsToUpdate\n     * @memberof module:offline\n     * @instance\n    */\n    function browseAdaptationsSet(currentPeriod, representationsToUpdate) {\n        let adaptationsSet,\n            currentAdaptationSet,\n            currentAdaptationType,\n            representations;\n\n        adaptationsSet = currentPeriod.getElementsByTagName(dashConstants.ADAPTATION_SET);\n\n        for (let i = adaptationsSet.length - 1; i >= 0; i--) {\n            currentAdaptationSet = adaptationsSet[i];\n            if (currentAdaptationSet) {\n                currentAdaptationType = findAdaptationType(currentAdaptationSet);\n                representations = findRepresentations(currentAdaptationSet);\n\n                findAndKeepOnlySelectedRepresentations(currentAdaptationSet, representations, currentAdaptationType);\n\n                representations = findRepresentations(currentAdaptationSet);\n\n                deleteSegmentBase(currentAdaptationSet);\n\n                if (representations.length === 0) {\n                    currentPeriod.removeChild(currentAdaptationSet);\n                } else {\n                    //detect Segment list use case\n                    for (let i = 0; i < representations.length; i++) {\n                        let rep = representations[i];\n                        let segmentList = getSegmentList(rep);\n                        if (segmentList.length >= 1) {\n                            editSegmentListAttributes(segmentList, rep);\n                        }\n                    }\n\n                    let segmentTemplate = getSegmentTemplate(currentAdaptationSet);\n                    // segmentTemplate is defined, update attributes in order to be correctly played offline\n                    if (segmentTemplate.length >= 1) {\n                        editSegmentTemplateAttributes(segmentTemplate);\n                    }\n\n                    // detect SegmentBase use case => transfrom manifest to SegmentList in SegmentTemplate\n                    if (representationsToUpdate && representationsToUpdate.length > 0 ) {\n                        let selectedRep;\n                        for (let i = 0; i < representations.length; i++) {\n                            let rep = representations[i];\n                            for (let j = 0; representationsToUpdate && j < representationsToUpdate.length; j++) {\n                                if (representationsToUpdate[j].id === rep.id) {\n                                    selectedRep = representationsToUpdate[j];\n                                    break;\n                                }\n                            }\n                        }\n                        addSegmentTemplateAttributes(currentAdaptationSet, selectedRep);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Returns type of adapation set\n     * @param {XML} currentAdaptationSet\n     * @memberof module:offline\n     * @returns {string|null} type\n     * @instance\n    */\n    function findAdaptationType(currentAdaptationSet) {\n        if (getIsMuxed(currentAdaptationSet)) {\n            return constants.MUXED;\n        } else if (getIsAudio(currentAdaptationSet)) {\n            return constants.AUDIO;\n        } else if (getIsVideo(currentAdaptationSet)) {\n            return constants.VIDEO;\n        } else if (getIsFragmentedText(currentAdaptationSet)) {\n            return constants.FRAGMENTED_TEXT;\n        } else if (getIsImage(currentAdaptationSet)) {\n            return constants.IMAGE;\n        }\n\n        return constants.TEXT;\n    }\n\n    function getIsAudio(adaptation) {\n        return getIsTypeOf(adaptation, constants.AUDIO);\n    }\n\n    function getIsVideo(adaptation) {\n        return getIsTypeOf(adaptation, constants.VIDEO);\n    }\n\n    function getIsFragmentedText(adaptation) {\n        return getIsTypeOf(adaptation, constants.FRAGMENTED_TEXT);\n    }\n\n    function getIsMuxed(adaptation) {\n        return getIsTypeOf(adaptation, constants.MUXED);\n    }\n\n    function getIsImage(adaptation) {\n        return getIsTypeOf(adaptation, constants.IMAGE);\n    }\n\n    // based upon DashManifestModel, but using DomParser\n    function getIsTypeOf(adaptation, type) {\n\n        if (!adaptation) {\n            throw new Error('adaptation is not defined');\n        }\n\n        if (!type) {\n            throw new Error('type is not defined');\n        }\n\n        // 1. check codecs for fragmented text\n        if (isFragmentedTextCodecFound(adaptation)) {\n            // fragmented text codec has been found for adaptation, let's check if tested type is fragmented text\n            return type === constants.FRAGMENTED_TEXT;\n        }\n\n        // 2. test mime type\n        return testMimeType(adaptation, type);\n    }\n\n    function testMimeType(adaptation, type) {\n        let mimeTypeRegEx = (type !== constants.TEXT) ? new RegExp(type) : new RegExp('(vtt|ttml)');\n\n        let mimeType = findMimeType(adaptation);\n        if (mimeType) {\n            return mimeTypeRegEx.test(mimeType);\n        }\n\n        // no mime type in adaptation, search in representation\n        let representations = findRepresentations(adaptation);\n        if (representations) {\n            for (let i = 0; i < representations.length; i++) {\n                let representation = representations[i];\n                mimeType = findMimeType(representation);\n                if (mimeType) {\n                    return mimeTypeRegEx.test(mimeType);\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Search for fragmented text codec in adaptation (STPP or WVTT)\n     * @param {Object} adaptation\n     */\n    function isFragmentedTextCodecFound (adaptation) {\n        let isFragmentedTextCodecFoundInTag = function (tag) {\n            let codecs = tag.getAttribute(dashConstants.CODECS);\n            if (codecs) {\n                if (codecs.search(constants.STPP) === 0 ||\n                    codecs.search(constants.WVTT) === 0 ) {\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        if (isFragmentedTextCodecFoundInTag(adaptation)) {\n            return true;\n        }\n\n        // check in representations\n        let representations = findRepresentations(adaptation);\n        if (representations && representations.length > 0) {\n\n            if (isFragmentedTextCodecFoundInTag(representations[0])) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns mime-type of xml tag\n     * @param {Object} tag\n     * @memberof module:offline\n     * @returns {string|null} mimeType\n     * @instance\n    */\n    function findMimeType(tag) {\n        return tag.getAttribute(dashConstants.MIME_TYPE);\n    }\n\n    /**\n     * Returns representations of adaptation set\n     * @param {XML} adaptation\n     * @memberof module:offline\n     * @returns {XML} representations\n     * @instance\n    */\n    function findRepresentations(adaptation) {\n        return adaptation.getElementsByTagName(dashConstants.REPRESENTATION);\n    }\n\n    /**\n     * Return segment template list of adaptations set\n     * @param {XML} currentAdaptationSet\n     * @memberof module:offline\n     * @returns {XML} representations\n     * @instance\n    */\n    function getSegmentTemplate(currentAdaptationSet) {\n        return currentAdaptationSet.getElementsByTagName(dashConstants.SEGMENT_TEMPLATE);\n    }\n\n    /**\n     * Return segment list tags of adaptations set\n     * @param {XML} tag\n     * @memberof module:offline\n     * @returns {XML} representations\n     * @instance\n    */\n    function getSegmentList(tag) {\n        return tag.getElementsByTagName(dashConstants.SEGMENT_LIST);\n    }\n\n    function deleteSegmentBase(tag) {\n        let elements = tag.getElementsByTagName(dashConstants.SEGMENT_BASE);\n        for (let i = 0; i < elements.length; i++) {\n            let segmentBase = elements[i];\n            segmentBase.parentNode.removeChild(segmentBase);\n        }\n    }\n\n    /**\n     * @param {XML} segmentTemplate\n     * @param {object} rep\n     * @memberof module:offline\n     * @instance\n    */\n    function addSegmentTimelineElements(segmentTemplate, rep) {\n        let S = DOM.createElement('S');\n        if (rep && rep.segments) {\n            let segmentTimelineElement = DOM.createElement(dashConstants.SEGMENT_TIMELINE);\n            let changedDuration = getDurationChangeArray(rep);\n            for (let i = 0; i < changedDuration.length; i++) {\n                let repeatValue = i + 1 < changedDuration.length ? (changedDuration[i + 1] - changedDuration[i]) - 1 : 0;\n                if (repeatValue > 1) {\n                    S.setAttribute('r', repeatValue);\n                }\n                S.setAttribute('d', rep.segments[changedDuration[i]].duration);\n                segmentTimelineElement.appendChild(S);\n                S = DOM.createElement('S');\n            }\n            segmentTemplate.appendChild(segmentTimelineElement);\n        }\n    }\n\n    function getDurationChangeArray(rep) {\n        let array = [];\n        array.push(0);\n        for (let i = 1; i < rep.segments.length; i++) {\n            if (rep.segments[i - 1].duration !== rep.segments[i].duration) {\n                array.push(i);\n            }\n        }\n        return array;\n    }\n\n    /**\n     * Update attributes of segment templates to match offline urls\n     * @param {Array} segmentsTemplates\n     * @memberof module:offline\n     * @instance\n    */\n    function editSegmentTemplateAttributes(segmentsTemplates) {\n        for (let i = 0; i < segmentsTemplates.length; i++) {\n            let media = segmentsTemplates[i].getAttribute(dashConstants.MEDIA);\n            media = '$RepresentationID$_$Number$' + media.substring(media.indexOf('.'), media.length); //id + extension\n            segmentsTemplates[i].setAttribute(dashConstants.START_NUMBER, '0');\n            segmentsTemplates[i].setAttribute(dashConstants.MEDIA, media);\n            segmentsTemplates[i].setAttribute(dashConstants.INITIALIZATION_MINUS,'$RepresentationID$_init');\n        }\n    }\n\n    /**\n     * Update attributes of segment list to match offline urls\n     * @param {Array} segmentLists\n     * @param {Object} representation\n     * @memberof module:offline\n     * @instance\n    */\n    function editSegmentListAttributes(segmentLists, representation) {\n        let repId = representation.getAttribute(dashConstants.ID);\n        for (let i = 0; i < segmentLists.length; i++) {\n\n            let segmentList = segmentLists[i];\n            let initialisation = segmentList.getElementsByTagName(dashConstants.INITIALIZATION);\n            if (initialisation) {\n                let sourceURL = initialisation[0].getAttribute(dashConstants.SOURCE_URL);\n                sourceURL = `${repId}_init`;\n                initialisation[0].setAttribute(dashConstants.SOURCE_URL, sourceURL);\n            }\n            let segmentURLs = segmentList.getElementsByTagName(dashConstants.SEGMENT_URL);\n\n            if (segmentURLs) {\n                for (let j = 0; j < segmentURLs.length; j++) {\n                    let segmentUrl = segmentURLs[j];\n                    let media = segmentUrl.getAttribute(dashConstants.MEDIA);\n                    media = `${repId}_${j}`;\n                    segmentUrl.setAttribute(dashConstants.MEDIA, media);\n                }\n            }\n        }\n    }\n\n    /**\n     * @param {XML} adaptationSet\n     * @param {object} rep\n     * @memberof module:offline\n     * @instance\n    */\n    function addSegmentTemplateAttributes(adaptationSet, rep) {\n        let segmentTemplateElement = DOM.createElement(dashConstants.SEGMENT_TEMPLATE);\n        segmentTemplateElement.setAttribute(dashConstants.START_NUMBER, '0');\n        segmentTemplateElement.setAttribute(dashConstants.MEDIA, '$RepresentationID$-$Time$');\n        segmentTemplateElement.setAttribute(dashConstants.INITIALIZATION_MINUS,'$RepresentationID$_init');\n        addSegmentTimelineElements(segmentTemplateElement, rep);\n        adaptationSet.appendChild(segmentTemplateElement);\n    }\n\n    /**\n     * Delete all representations except the one choosed by user\n     * @param {XML} currentAdaptationSet\n     * @param {XML} representations\n     * @param {string} adaptationType\n     * @memberof module:offline\n     * @instance\n    */\n    function findAndKeepOnlySelectedRepresentations(currentAdaptationSet, representations, adaptationType) {\n        for ( var i = representations.length - 1; i >= 0; i--) {\n            let representation = representations[i];\n            let repId = representation.getAttribute(dashConstants.ID);\n            if (allMediaInfos[adaptationType] && allMediaInfos[adaptationType].indexOf(repId) === -1) {\n                // representation is not selected, remove it\n                currentAdaptationSet.removeChild(representation);\n            }\n        }\n    }\n\n    //  UTILS\n    /**\n     * Get id of first representation of adaptation set\n     * @param {XMl} currentAdaptationSet\n     * @memberof module:offline\n     * @returns {string} id\n     * @instance\n    */\n    function getBestRepresentationId(currentAdaptationSet) {\n        let bestRepresentation = currentAdaptationSet.getElementsByTagName(dashConstants.REPRESENTATION)[0];\n        console.log(bestRepresentation.getAttribute(dashConstants.ID));\n        return bestRepresentation.getAttribute(dashConstants.ID);\n    }\n\n    /**\n     * Parse and returns fragments of offline url => xxxx://xxxx/fragmentId/\n     * @param {string} url\n     * @memberof module:offline\n     * @returns {string} fragmentId\n     * @instance\n    */\n    function getFragmentId(url) {\n        let idxFragId = url.lastIndexOf('/');\n        //logger.warn('fragId : ' + url.substring(idxFragId + 1, url.length));\n        return url.substring(idxFragId,url.length);\n    }\n\n    setup();\n\n    instance = {\n        parse: parse\n    };\n\n    return instance;\n}\nOfflineIndexDBManifestParser.__dashjs_factory_name = 'OfflineIndexDBManifestParser';\nexport default dashjs.FactoryMaker.getClassFactory(OfflineIndexDBManifestParser); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport OfflineConstants from '../constants/OfflineConstants';\n\n/**\n * @module OfflineUrlUtils\n * @description Provides utility functions for operating on offline URLs.\n * Initially this is simply a method to determine the Base URL of a URL, but\n * should probably include other things provided all over the place such as\n * determining whether a URL is relative/absolute, resolving two paths etc.\n */\nfunction OfflineUrlUtils() {\n\n    function setup() {\n    }\n\n    function getRegex() {\n        return OfflineConstants.OFFLINE_URL_REGEX;\n    }\n\n    /*\n     * -------------------\n     * SPECIFIC BEHAVIOUR\n     * -------------------\n     */\n    function removeHostname(url) {\n        return url.replace(/(^\\w+:|^)\\/\\//, '');\n    }\n\n    function isRelative() {\n        return false;\n    }\n\n    function resolve(url, baseUrl) {\n        if (baseUrl.charAt(baseUrl.length - 1 ) !== '/') {\n            baseUrl = baseUrl.concat('/');\n        }\n        return baseUrl + url;\n    }\n\n    setup();\n    const instance = {\n        getRegex:           getRegex,\n        isRelative:         isRelative,\n        removeHostname:     removeHostname,\n        resolve:            resolve\n    };\n    return instance;\n}\n\nOfflineUrlUtils.__dashjs_factory_name = 'OfflineUrlUtils';\nexport default dashjs.FactoryMaker.getSingletonFactory(OfflineUrlUtils); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass OfflineDownload {\n    constructor() {\n        this.id = null;\n        this.url = null;\n        this.originalUrl = null;\n        this.status = null;\n        this.progress = null;\n    }\n}\n\nexport default OfflineDownload;\n"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","_dereq_","module","XmlEntities","Html4Entities","Html5Entities","AllHtmlEntities","HTML_ALPHA","HTML_CODES","alphaIndex","numIndex","String","fromCharCode","prototype","decode","str","replace","s","entity","chr","charAt","toLowerCase","parseInt","substr","isNaN","encode","strLength","result","alpha","charCodeAt","encodeNonUTF","cc","encodeNonASCII","ENTITIES","charIndex","charInfo","_results","chr2","chars","addChar","push","createIndexes","ALPHA_INDEX","&lt","&gt","&quot","&apos","&amp","&lt;","&gt;","&quot;","&apos;","&amp;","CHAR_INDEX","60","62","34","39","38","CHAR_S_INDEX","<",">","\"","'","&","strLenght","define","amd","window","global","self","this","localforage","l","called","observer","element","channel","draining","Mutation","MutationObserver","WebKitMutationObserver","scheduleDrain","nextTick","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","port1","onmessage","port2","postMessage","queue","oldQueue","len","task","2","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","value","returnValue","reject","resolve","getThen","obj","then","apply","arguments","thenable","onError","onSuccess","tryCatch","status","out","constructor","error","reason","all","iterable","Object","toString","values","Array","resolved","allResolver","outValue","race","response","3","4","_typeof","Symbol","iterator","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","parts","properties","Blob","name","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_checkBlobSupport","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","match","matchedEdge","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","incVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","_decodeBlob","encodedBlob","bin","buf","ArrayBuffer","arr","Uint8Array","_binStringToArrayBuffer","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","mode","retries","undefined","tx","forages","forage","_tryReconnect","asyncStorage","_driver","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","_support","isSafari","openDatabase","test","platform","hasFetch","fetch","indexOf","IDBKeyRange","isIndexedDBValid","iterate","req","openCursor","iterationNumber","cursor","getItem","get","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","target","readAsBinaryString","store","removeItem","clear","count","advanced","advance","keys","dropInstance","dbPromise","currentConfig","config","deleteObjectStore","_forage2","deleteDatabase","onblocked","BASE_CHARS","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","buffer","bytes","bufferToString","base64String","substring","localforageSerializer","serialize","valueType","marker","fileReader","onload","readAsArrayBuffer","JSON","stringify","deserialize","parse","matcher","blobType","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","_setItem","retriesLeft","originalValue","serializer","sqlError","QUOTA_ERR","webSQLStorage","dbInfoPromise","description","size","item","storeNames","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorageTestKey","localStorage","checkIfLocalStorageThrows","includes","array","searchElement","x","y","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","LocalForage","driverTypeKey","instance","Constructor","_classCallCheck","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","localforage_js","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","EventsBase","events","override","publicOnly","evt","OfflineDownload","manifestLoader","adapter","offlineStoreController","manifestId","id","eventBus","errHandler","debug","manifestUpdater","baseURLController","constants","dashConstants","urlUtils","context","logger","_manifestURL","_offlineURL","_xmlManifest","_streams","_manifest","_isDownloadingStatus","_isComposed","_representationsToUpdate","_indexDBManifestParser","_progressionById","_progression","_status","isDownloading","onManifestUpdated","manifest","_constantsOfflineConstants2","OFFLINE_STATUS_ERROR","_errorsOfflineErrors2","OFFLINE_ERROR","message","onDownloadingStarted","OFFLINE_STATUS_STARTED","setDownloadingStatus","trigger","DOWNLOADING_STARTED","OnStreamProgression","stream","downloaded","available","getStreamInfo","segments","allSegments","waitForAllProgress","property","getManifestById","progress","updateOfflineManifest","onDownloadingFinished","OFFLINE_STATUS_FINISHED","DOWNLOADING_FINISHED","resetDownload","onManifestUpdateNeeded","representations","parsedManifest","ln","startOfflineStreamProcessors","composeStreams","updatePeriods","initialize","streamsInfo","getStreamsInfo","streamInfo","_OfflineStream2","create","callbacks","started","progression","finished","updateManifestNeeded","createFragmentStore","offlineManifest","onOriginalManifestLoaded","off","ORIGINAL_MANIFEST_LOADED","originalManifest","DYNAMIC","Period_asArray","forEach","getDownloadableRepresentations","STREAMS_COMPOSED","initializeAllMediasInfoList","selectedRepresentations","stopDownload","stopOfflineStreamProcessors","OFFLINE_STATUS_STOPPED","DOWNLOADING_STOPPED","sender","reset","MANIFEST_UPDATED","on","ERROR","INDEXEDDB_QUOTA_EXCEED_ERROR","INDEXEDDB_INVALID_STATE_ERROR","getId","getOfflineUrl","getManifestUrl","getStatus","setInitialState","url","originalUrl","initDownload","load","downloadFromUrl","OFFLINE_SCHEME","OFFLINE_STATUS_CREATED","fragmentStore","originalURL","createOfflineManifest","startDownload","ret","VIDEO","AUDIO","TEXT","FRAGMENTED_TEXT","video","audio","text","rep","saveSelectedRepresentations","XMLManifest","_utilsOfflineIndexDBManifestParser2","allMediaInfos","resumeDownload","selectedRepresentation","selected","deleteDownload","getDownloadProgression","Math","round","getLogger","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory","OfflineStream","startedCb","progressionCb","finishedCb","updateManifest","offlineStreamProcessors","startedOfflineStreamProcessors","finishedOfflineStreamProcessors","representationsToUpdate","allMediasInfosList","progressionById","resetInitialSettings","createOfflineStreamProcessorFor","allMediaInfoForType","getAllMediaInfoForType","media","bitrateList","filter","bitrate","mediaInfo","streamProcessor","_OfflineStreamProcessor2","completed","onStreamCompleted","onStreamProgression","setConfig","mimeType","downloadedSegments","availableSegments","getRepresentationId","onDataUpdateCompleted","repCtrl","getStreamId","currentRepresentation","sp","getRepresentationController","checkIfAllOfflineStreamProcessorsStarted","stop","start","initStreamInfo","DATA_UPDATE_COMPLETED","downloadableRepresentations","trackKindMap","subtitle","caption","addTextInfo","infos","kind","lang","roles","accessibility","bandwidth","width","height","DOWNLOADABLE_REPRESENTATIONS_LOADED","mediasInfoList","initializeMedia","removeExecutedRequestsBeforeTime","NaN","duration","deactivate","OfflineStreamProcessor","completedCb","progressCb","indexHandler","representationController","fragmentModel","updating","isInitialized","isStopped","onFragmentLoadingCompleted","isInit","suffix","fragmentName","request","index","representationId","storeFragment","setRepresentationCurrentState","serviceLocation","executeRequest","download","initializeDownloader","voRepresentations","getVoRepresentations","quality","findIndex","representation","updateData","updateRepresentation","getCurrentRepresentation","getNextSegmentRequest","getAvailableSegmentsNumber","getInitRequest","getMediaInfo","availableSegmentsNumber","_eventsOfflineEvents2","DASH_ELEMENTS_CREATION_NEEDED","time","getType","isUpdating","getRepresentationCurrentState","setCurrentIndex","setDashElements","handler","fragModel","repController","STREAM_COMPLETED","FRAGMENT_LOADING_COMPLETED","factory","OfflineConstants","init","OFFLINE_URL_REGEX","OfflineController","downloads","schemeLoaderFactory","manifestModel","offlineUrlUtils","getDownloadFromId","find","createDownloadFromId","_OfflineDownload2","removeDownloadFromId","waitForStatusChanged","downloadStopped","deleteDownloadById","splice","resetDownloads","_OfflineStoreController2","registerUrlRegex","getRegex","registerLoader","_netIndexDBOfflineLoader2","loadDownloadsFromStorage","getAllManifests","items","manifests","offline","createDownload","Date","getTime","getAllDownloads","offlineDownload","_voOfflineDownloadVo2","unregisterLoader","_utilsOfflineUrlUtils2","getInstance","errors","updateClassFactory","OfflineStoreController","indexDBStore","manageDOMError","INDEXEDDB_NOT_FOUND_ERROR","INDEXEDDB_VERSION_ERROR","fragmentId","fragmentData","storeManifest","getCurrentHigherManifestId","_storageIndexDBStore2","Errors","INDEXEDDB_NOT_READABLE_ERROR","INDEXEDDB_NETWORK_ERROR","INDEXEDDB_DATA_ERROR","INDEXEDDB_TRANSACTION_INACTIVE_ERROR","INDEXEDDB_NOT_ALLOWED_ERROR","INDEXEDDB_NOT_SUPPORTED_ERROR","INDEXEDDB_TIMEOUT_ERROR","INDEXEDDB_ABORT_ERROR","INDEXEDDB_UNKNOWN_ERROR","OfflineEvents","_get","getPrototypeOf","DOWNLOADING_PAUSED","offlineEvents","_controllersOfflineController2","IndexDBOfflineLoader","removeHostname","split","mediaType","MUXED","IMAGE","EMBEDDED_TEXT","getFragmentByKey","fragment","success","ARRAY_BUFFER","MPD","XML","abort","entities","IndexDBStore","manifestStore","fragmentStores","dropAll","log","newStatus","higherManifestId","dropFragmentStore","getSingletonFactory","Entities","OfflineIndexDBManifestParser","DOM","editBaseURLAttribute","currentMPD","basesURL","getElementsByTagName","BASE_URL","innerHTML","adaptationsSet","_parent","nodeName","REPRESENTATION","ADAPTATION_SET","isHTTPS","isHTTPURL","getFragmentId","getBestRepresentationId","browsePeriods","periods","PERIOD","browseAdaptationsSet","currentPeriod","currentAdaptationSet","currentAdaptationType","findAdaptationType","findAndKeepOnlySelectedRepresentations","findRepresentations","deleteSegmentBase","segmentList","SEGMENT_LIST","editSegmentListAttributes","segmentTemplate","SEGMENT_TEMPLATE","editSegmentTemplateAttributes","selectedRep","_i2","addSegmentTemplateAttributes","getIsTypeOf","adaptation","isFragmentedTextCodecFoundInTag","tag","codecs","getAttribute","CODECS","search","STPP","WVTT","isFragmentedTextCodecFound","mimeTypeRegEx","RegExp","findMimeType","testMimeType","MIME_TYPE","elements","SEGMENT_BASE","segmentBase","addSegmentTimelineElements","S","segmentTimelineElement","SEGMENT_TIMELINE","changedDuration","getDurationChangeArray","repeatValue","setAttribute","segmentsTemplates","MEDIA","START_NUMBER","INITIALIZATION_MINUS","segmentLists","repId","ID","sourceURL","initialisation","INITIALIZATION","SOURCE_URL","segmentURLs","SEGMENT_URL","segmentUrl","adaptationSet","segmentTemplateElement","adaptationType","bestRepresentation","idxFragId","lastIndexOf","XMLDoc","mpd","DOMParser","parseFromString","manifestEncoded","XMLSerializer","serializeToString","OfflineUrlUtils","isRelative","baseUrl"],"mappings":"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MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,KAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,QAAA,CAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,QAAA,CAAA,WAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,QAAA,CAAA,QAAA,CAAA,OAAA,CAAA,WAAA,CAAA,QAAA,CAAA,WAAA,CAAA,QAAA,CAAA,WAAA,CAAA,QAAA,CAAA,WAAA,CAAA,QAAA,CAAA,WAAA,CAAA,QAAA,CAAA,WAAA,CAAA,QAAA,CAAA,WAAA,CAAA,QAAA,CAAA,WAAA,CAAA,QAAA,CAAA,SAAA,CAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,CAAA,OAAA,CAAA,WAAA,CAAA,QAAA,CAAA,SAAA,CAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,UAAA,CAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,SAAA,CAAA,QAAA,CAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,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AA,QAAA,CAAA,QAAA,CAAA,aAAA,CAAA,OAAA,CAAA,WAAA,CAAA,QAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,OAAA,CAAA,SAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,WAAA,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,SAAA,CAAA,QAAA,CAAA,UAAA,CAAA,QAAA,CAAA,WAAA,CAAA,QAAA,CAAA,OAAA,CAAA,KAAA,QAAA,CAAA,SAAA,CAAA,QAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,MAAA,CAAA,QA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AA,CAAA,QAAA,CAAA,OAAA,CAAA,KAAA,CAAA,OAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,SAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,WAAA,CAAA,QAAA,CAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,SAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,aAAA,CAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,CAAA,QAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OAAA,CAAA,OA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"}